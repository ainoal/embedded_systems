
KeypadTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000020  00800100  00000fde  00001072  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000fde  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800120  00800120  00001092  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001092  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000010f0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00001130  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000017e7  00000000  00000000  00001180  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007f5  00000000  00000000  00002967  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000087d  00000000  00000000  0000315c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000078  00000000  00000000  000039dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000465  00000000  00000000  00003a54  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000011a4  00000000  00000000  00003eb9  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000030  00000000  00000000  0000505d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee ed       	ldi	r30, 0xDE	; 222
  7c:	ff e0       	ldi	r31, 0x0F	; 15
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 32       	cpi	r26, 0x20	; 32
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e2       	ldi	r26, 0x20	; 32
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 32       	cpi	r26, 0x26	; 38
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 ed 07 	jmp	0xfda	; 0xfda <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:
#include <util/delay.h>
#include <stdio.h>


int main(void)
{
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
  aa:	cd b7       	in	r28, 0x3d	; 61
  ac:	de b7       	in	r29, 0x3e	; 62
  ae:	6c 97       	sbiw	r28, 0x1c	; 28
  b0:	0f b6       	in	r0, 0x3f	; 63
  b2:	f8 94       	cli
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	0f be       	out	0x3f, r0	; 63
  b8:	cd bf       	out	0x3d, r28	; 61
    /********************testing****************************/
    char input;
    FILE uart_output = FDEV_SETUP_STREAM(USART_transmit, NULL, _FDEV_SETUP_WRITE);
  ba:	2e e0       	ldi	r18, 0x0E	; 14
  bc:	ce 01       	movw	r24, r28
  be:	01 96       	adiw	r24, 0x01	; 1
  c0:	fc 01       	movw	r30, r24
  c2:	32 2f       	mov	r19, r18
  c4:	11 92       	st	Z+, r1
  c6:	3a 95       	dec	r19
  c8:	e9 f7       	brne	.-6      	; 0xc4 <main+0x1e>
  ca:	32 e0       	ldi	r19, 0x02	; 2
  cc:	3c 83       	std	Y+4, r19	; 0x04
  ce:	43 e9       	ldi	r20, 0x93	; 147
  d0:	54 e0       	ldi	r21, 0x04	; 4
  d2:	5a 87       	std	Y+10, r21	; 0x0a
  d4:	49 87       	std	Y+9, r20	; 0x09
    FILE uart_input = FDEV_SETUP_STREAM(NULL, USART_receive, _FDEV_SETUP_READ);
  d6:	de 01       	movw	r26, r28
  d8:	1f 96       	adiw	r26, 0x0f	; 15
  da:	fd 01       	movw	r30, r26
  dc:	11 92       	st	Z+, r1
  de:	2a 95       	dec	r18
  e0:	e9 f7       	brne	.-6      	; 0xdc <main+0x36>
  e2:	21 e0       	ldi	r18, 0x01	; 1
  e4:	2a 8b       	std	Y+18, r18	; 0x12
  e6:	2a e9       	ldi	r18, 0x9A	; 154
  e8:	34 e0       	ldi	r19, 0x04	; 4
  ea:	3a 8f       	std	Y+26, r19	; 0x1a
  ec:	29 8f       	std	Y+25, r18	; 0x19
    stdout = &uart_output;
  ee:	e0 e2       	ldi	r30, 0x20	; 32
  f0:	f1 e0       	ldi	r31, 0x01	; 1
  f2:	93 83       	std	Z+3, r25	; 0x03
  f4:	82 83       	std	Z+2, r24	; 0x02
    stdin = &uart_input;
  f6:	b1 83       	std	Z+1, r27	; 0x01
  f8:	a0 83       	st	Z, r26
    
    DDRB |= (1 << PB0);
  fa:	84 b1       	in	r24, 0x04	; 4
  fc:	81 60       	ori	r24, 0x01	; 1
  fe:	84 b9       	out	0x04, r24	; 4
    DDRB |= (1 << PB1);
 100:	84 b1       	in	r24, 0x04	; 4
 102:	82 60       	ori	r24, 0x02	; 2
 104:	84 b9       	out	0x04, r24	; 4
    DDRB |= (1 << PB2);
 106:	84 b1       	in	r24, 0x04	; 4
 108:	84 60       	ori	r24, 0x04	; 4
 10a:	84 b9       	out	0x04, r24	; 4
    DDRB |= (1 << PB3);
 10c:	84 b1       	in	r24, 0x04	; 4
 10e:	88 60       	ori	r24, 0x08	; 8
 110:	84 b9       	out	0x04, r24	; 4
    /******************************************************/
    
    // Set digital pins 0-3 (columns) as input and 4-7 (rows) as output
    DDRD |= 0b11110000;
 112:	8a b1       	in	r24, 0x0a	; 10
 114:	80 6f       	ori	r24, 0xF0	; 240
 116:	8a b9       	out	0x0a, r24	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 118:	89 ef       	ldi	r24, 0xF9	; 249
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	01 97       	sbiw	r24, 0x01	; 1
 11e:	f1 f7       	brne	.-4      	; 0x11c <main+0x76>
 120:	00 c0       	rjmp	.+0      	; 0x122 <main+0x7c>
 122:	00 00       	nop
    _delay_ms(1);
    
    PORTD |= 0b00001111;    // Power the row pins
 124:	8b b1       	in	r24, 0x0b	; 11
 126:	8f 60       	ori	r24, 0x0F	; 15
 128:	8b b9       	out	0x0b, r24	; 11
    
    int key_pressed = 0;
    
    while (1) 
    {
        PORTB &= ~(1 << PB0);
 12a:	85 b1       	in	r24, 0x05	; 5
 12c:	8e 7f       	andi	r24, 0xFE	; 254
 12e:	85 b9       	out	0x05, r24	; 5
 130:	9f e3       	ldi	r25, 0x3F	; 63
 132:	ed e0       	ldi	r30, 0x0D	; 13
 134:	f3 e0       	ldi	r31, 0x03	; 3
 136:	91 50       	subi	r25, 0x01	; 1
 138:	e0 40       	sbci	r30, 0x00	; 0
 13a:	f0 40       	sbci	r31, 0x00	; 0
 13c:	e1 f7       	brne	.-8      	; 0x136 <main+0x90>
 13e:	00 c0       	rjmp	.+0      	; 0x140 <main+0x9a>
 140:	00 00       	nop
        _delay_ms(1000);
        PORTB |= (1 << PB0);
 142:	85 b1       	in	r24, 0x05	; 5
 144:	81 60       	ori	r24, 0x01	; 1
 146:	85 b9       	out	0x05, r24	; 5
 148:	2f e3       	ldi	r18, 0x3F	; 63
 14a:	3d e0       	ldi	r19, 0x0D	; 13
 14c:	83 e0       	ldi	r24, 0x03	; 3
 14e:	21 50       	subi	r18, 0x01	; 1
 150:	30 40       	sbci	r19, 0x00	; 0
 152:	80 40       	sbci	r24, 0x00	; 0
 154:	e1 f7       	brne	.-8      	; 0x14e <main+0xa8>
 156:	00 c0       	rjmp	.+0      	; 0x158 <main+0xb2>
 158:	00 00       	nop
        _delay_ms(1000);
        PORTB &= ~(1 << PB0);
 15a:	85 b1       	in	r24, 0x05	; 5
 15c:	8e 7f       	andi	r24, 0xFE	; 254
 15e:	85 b9       	out	0x05, r24	; 5
 160:	9f e3       	ldi	r25, 0x3F	; 63
 162:	ed e0       	ldi	r30, 0x0D	; 13
 164:	f3 e0       	ldi	r31, 0x03	; 3
 166:	91 50       	subi	r25, 0x01	; 1
 168:	e0 40       	sbci	r30, 0x00	; 0
 16a:	f0 40       	sbci	r31, 0x00	; 0
 16c:	e1 f7       	brne	.-8      	; 0x166 <main+0xc0>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <main+0xca>
 170:	00 00       	nop
        _delay_ms(1000);
        
        if (PIND!= 0b00001111) {     // If any of column pins goes high
 172:	89 b1       	in	r24, 0x09	; 9
 174:	8f 30       	cpi	r24, 0x0F	; 15
 176:	c9 f2       	breq	.-78     	; 0x12a <main+0x84>
            key_pressed = PIND;
 178:	29 b1       	in	r18, 0x09	; 9
            DDRD ^= 0b11111111;      // Make rows as inputs and columns as output
 17a:	9a b1       	in	r25, 0x0a	; 10
 17c:	90 95       	com	r25
 17e:	9a b9       	out	0x0a, r25	; 10
 180:	89 ef       	ldi	r24, 0xF9	; 249
 182:	90 e0       	ldi	r25, 0x00	; 0
 184:	01 97       	sbiw	r24, 0x01	; 1
 186:	f1 f7       	brne	.-4      	; 0x184 <main+0xde>
 188:	00 c0       	rjmp	.+0      	; 0x18a <main+0xe4>
 18a:	00 00       	nop
            _delay_ms(1);
             PORTD ^= 0b11111111;   // Power the columns
 18c:	9b b1       	in	r25, 0x0b	; 11
 18e:	90 95       	com	r25
 190:	9b b9       	out	0x0b, r25	; 11
 192:	e9 ef       	ldi	r30, 0xF9	; 249
 194:	f0 e0       	ldi	r31, 0x00	; 0
 196:	31 97       	sbiw	r30, 0x01	; 1
 198:	f1 f7       	brne	.-4      	; 0x196 <main+0xf0>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <main+0xf6>
 19c:	00 00       	nop
            _delay_ms(1);

            
            key_pressed |= PIND;    // The variable has now both row and column values
 19e:	89 b1       	in	r24, 0x09	; 9
 1a0:	82 2b       	or	r24, r18
 1a2:	90 e0       	ldi	r25, 0x00	; 0
            
            if (key_pressed == 0b00010001) {
 1a4:	81 31       	cpi	r24, 0x11	; 17
 1a6:	91 05       	cpc	r25, r1
 1a8:	29 f5       	brne	.+74     	; 0x1f4 <main+0x14e>
                // Key 1 pressed
                PORTB &= ~(1 << PB0);
 1aa:	85 b1       	in	r24, 0x05	; 5
 1ac:	8e 7f       	andi	r24, 0xFE	; 254
 1ae:	85 b9       	out	0x05, r24	; 5
 1b0:	ff e3       	ldi	r31, 0x3F	; 63
 1b2:	2d e0       	ldi	r18, 0x0D	; 13
 1b4:	33 e0       	ldi	r19, 0x03	; 3
 1b6:	f1 50       	subi	r31, 0x01	; 1
 1b8:	20 40       	sbci	r18, 0x00	; 0
 1ba:	30 40       	sbci	r19, 0x00	; 0
 1bc:	e1 f7       	brne	.-8      	; 0x1b6 <main+0x110>
 1be:	00 c0       	rjmp	.+0      	; 0x1c0 <main+0x11a>
 1c0:	00 00       	nop
                _delay_ms(1000);
                PORTB |= (1 << PB0);
 1c2:	85 b1       	in	r24, 0x05	; 5
 1c4:	81 60       	ori	r24, 0x01	; 1
 1c6:	85 b9       	out	0x05, r24	; 5
 1c8:	8f e3       	ldi	r24, 0x3F	; 63
 1ca:	9d e0       	ldi	r25, 0x0D	; 13
 1cc:	e3 e0       	ldi	r30, 0x03	; 3
 1ce:	81 50       	subi	r24, 0x01	; 1
 1d0:	90 40       	sbci	r25, 0x00	; 0
 1d2:	e0 40       	sbci	r30, 0x00	; 0
 1d4:	e1 f7       	brne	.-8      	; 0x1ce <main+0x128>
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <main+0x132>
 1d8:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~(1 << PB0);
 1da:	85 b1       	in	r24, 0x05	; 5
 1dc:	8e 7f       	andi	r24, 0xFE	; 254
 1de:	85 b9       	out	0x05, r24	; 5
 1e0:	ff e3       	ldi	r31, 0x3F	; 63
 1e2:	2d e0       	ldi	r18, 0x0D	; 13
 1e4:	33 e0       	ldi	r19, 0x03	; 3
 1e6:	f1 50       	subi	r31, 0x01	; 1
 1e8:	20 40       	sbci	r18, 0x00	; 0
 1ea:	30 40       	sbci	r19, 0x00	; 0
 1ec:	e1 f7       	brne	.-8      	; 0x1e6 <main+0x140>
 1ee:	00 c0       	rjmp	.+0      	; 0x1f0 <main+0x14a>
 1f0:	00 00       	nop
 1f2:	86 c3       	rjmp	.+1804   	; 0x900 <__stack+0x1>
                _delay_ms(1000);
            } else if (key_pressed == 0b00100001) {
 1f4:	81 32       	cpi	r24, 0x21	; 33
 1f6:	91 05       	cpc	r25, r1
 1f8:	e1 f5       	brne	.+120    	; 0x272 <main+0x1cc>
                // Key 2 pressed
                PORTB &= ~(1 << PB0);
 1fa:	85 b1       	in	r24, 0x05	; 5
 1fc:	8e 7f       	andi	r24, 0xFE	; 254
 1fe:	85 b9       	out	0x05, r24	; 5
 200:	8f e3       	ldi	r24, 0x3F	; 63
 202:	9d e0       	ldi	r25, 0x0D	; 13
 204:	e3 e0       	ldi	r30, 0x03	; 3
 206:	81 50       	subi	r24, 0x01	; 1
 208:	90 40       	sbci	r25, 0x00	; 0
 20a:	e0 40       	sbci	r30, 0x00	; 0
 20c:	e1 f7       	brne	.-8      	; 0x206 <main+0x160>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <main+0x16a>
 210:	00 00       	nop
                _delay_ms(1000);
                PORTB |= (1 << PB0);
 212:	85 b1       	in	r24, 0x05	; 5
 214:	81 60       	ori	r24, 0x01	; 1
 216:	85 b9       	out	0x05, r24	; 5
 218:	ff e3       	ldi	r31, 0x3F	; 63
 21a:	2d e0       	ldi	r18, 0x0D	; 13
 21c:	33 e0       	ldi	r19, 0x03	; 3
 21e:	f1 50       	subi	r31, 0x01	; 1
 220:	20 40       	sbci	r18, 0x00	; 0
 222:	30 40       	sbci	r19, 0x00	; 0
 224:	e1 f7       	brne	.-8      	; 0x21e <main+0x178>
 226:	00 c0       	rjmp	.+0      	; 0x228 <main+0x182>
 228:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~(1 << PB0);
 22a:	85 b1       	in	r24, 0x05	; 5
 22c:	8e 7f       	andi	r24, 0xFE	; 254
 22e:	85 b9       	out	0x05, r24	; 5
 230:	8f e3       	ldi	r24, 0x3F	; 63
 232:	9d e0       	ldi	r25, 0x0D	; 13
 234:	e3 e0       	ldi	r30, 0x03	; 3
 236:	81 50       	subi	r24, 0x01	; 1
 238:	90 40       	sbci	r25, 0x00	; 0
 23a:	e0 40       	sbci	r30, 0x00	; 0
 23c:	e1 f7       	brne	.-8      	; 0x236 <main+0x190>
 23e:	00 c0       	rjmp	.+0      	; 0x240 <main+0x19a>
 240:	00 00       	nop
                _delay_ms(1000);
                
                
                puts("2");
 242:	80 e0       	ldi	r24, 0x00	; 0
 244:	91 e0       	ldi	r25, 0x01	; 1
 246:	0e 94 f5 04 	call	0x9ea	; 0x9ea <puts>
                input = getchar();
 24a:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 24e:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 252:	0e 94 a1 04 	call	0x942	; 0x942 <fgetc>
                printf("%c\n", input);
 256:	99 27       	eor	r25, r25
 258:	9f 93       	push	r25
 25a:	8f 93       	push	r24
 25c:	82 e0       	ldi	r24, 0x02	; 2
 25e:	91 e0       	ldi	r25, 0x01	; 1
 260:	9f 93       	push	r25
 262:	8f 93       	push	r24
 264:	0e 94 df 04 	call	0x9be	; 0x9be <printf>
 268:	0f 90       	pop	r0
 26a:	0f 90       	pop	r0
 26c:	0f 90       	pop	r0
 26e:	0f 90       	pop	r0
 270:	47 c3       	rjmp	.+1678   	; 0x900 <__stack+0x1>
            } else if (key_pressed == 0b01000001) {
 272:	81 34       	cpi	r24, 0x41	; 65
 274:	91 05       	cpc	r25, r1
 276:	e1 f5       	brne	.+120    	; 0x2f0 <main+0x24a>
                // Key 3 pressed
                PORTB &= ~(1 << PB0);
 278:	85 b1       	in	r24, 0x05	; 5
 27a:	8e 7f       	andi	r24, 0xFE	; 254
 27c:	85 b9       	out	0x05, r24	; 5
 27e:	ff e3       	ldi	r31, 0x3F	; 63
 280:	2d e0       	ldi	r18, 0x0D	; 13
 282:	33 e0       	ldi	r19, 0x03	; 3
 284:	f1 50       	subi	r31, 0x01	; 1
 286:	20 40       	sbci	r18, 0x00	; 0
 288:	30 40       	sbci	r19, 0x00	; 0
 28a:	e1 f7       	brne	.-8      	; 0x284 <main+0x1de>
 28c:	00 c0       	rjmp	.+0      	; 0x28e <main+0x1e8>
 28e:	00 00       	nop
                _delay_ms(1000);
                PORTB |= (1 << PB0);
 290:	85 b1       	in	r24, 0x05	; 5
 292:	81 60       	ori	r24, 0x01	; 1
 294:	85 b9       	out	0x05, r24	; 5
 296:	8f e3       	ldi	r24, 0x3F	; 63
 298:	9d e0       	ldi	r25, 0x0D	; 13
 29a:	e3 e0       	ldi	r30, 0x03	; 3
 29c:	81 50       	subi	r24, 0x01	; 1
 29e:	90 40       	sbci	r25, 0x00	; 0
 2a0:	e0 40       	sbci	r30, 0x00	; 0
 2a2:	e1 f7       	brne	.-8      	; 0x29c <main+0x1f6>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <main+0x200>
 2a6:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~(1 << PB0);
 2a8:	85 b1       	in	r24, 0x05	; 5
 2aa:	8e 7f       	andi	r24, 0xFE	; 254
 2ac:	85 b9       	out	0x05, r24	; 5
 2ae:	ff e3       	ldi	r31, 0x3F	; 63
 2b0:	2d e0       	ldi	r18, 0x0D	; 13
 2b2:	33 e0       	ldi	r19, 0x03	; 3
 2b4:	f1 50       	subi	r31, 0x01	; 1
 2b6:	20 40       	sbci	r18, 0x00	; 0
 2b8:	30 40       	sbci	r19, 0x00	; 0
 2ba:	e1 f7       	brne	.-8      	; 0x2b4 <main+0x20e>
 2bc:	00 c0       	rjmp	.+0      	; 0x2be <main+0x218>
 2be:	00 00       	nop
                _delay_ms(1000);
                
                puts("3");
 2c0:	86 e0       	ldi	r24, 0x06	; 6
 2c2:	91 e0       	ldi	r25, 0x01	; 1
 2c4:	0e 94 f5 04 	call	0x9ea	; 0x9ea <puts>
                input = getchar();
 2c8:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 2cc:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 2d0:	0e 94 a1 04 	call	0x942	; 0x942 <fgetc>
                printf("%c\n", input);
 2d4:	99 27       	eor	r25, r25
 2d6:	9f 93       	push	r25
 2d8:	8f 93       	push	r24
 2da:	82 e0       	ldi	r24, 0x02	; 2
 2dc:	91 e0       	ldi	r25, 0x01	; 1
 2de:	9f 93       	push	r25
 2e0:	8f 93       	push	r24
 2e2:	0e 94 df 04 	call	0x9be	; 0x9be <printf>
 2e6:	0f 90       	pop	r0
 2e8:	0f 90       	pop	r0
 2ea:	0f 90       	pop	r0
 2ec:	0f 90       	pop	r0
 2ee:	08 c3       	rjmp	.+1552   	; 0x900 <__stack+0x1>
            } else if (key_pressed == 0b10000001) {
 2f0:	81 38       	cpi	r24, 0x81	; 129
 2f2:	91 05       	cpc	r25, r1
 2f4:	e1 f5       	brne	.+120    	; 0x36e <main+0x2c8>
                // A
                PORTB &= ~(1 << PB0);
 2f6:	85 b1       	in	r24, 0x05	; 5
 2f8:	8e 7f       	andi	r24, 0xFE	; 254
 2fa:	85 b9       	out	0x05, r24	; 5
 2fc:	8f e3       	ldi	r24, 0x3F	; 63
 2fe:	9d e0       	ldi	r25, 0x0D	; 13
 300:	e3 e0       	ldi	r30, 0x03	; 3
 302:	81 50       	subi	r24, 0x01	; 1
 304:	90 40       	sbci	r25, 0x00	; 0
 306:	e0 40       	sbci	r30, 0x00	; 0
 308:	e1 f7       	brne	.-8      	; 0x302 <main+0x25c>
 30a:	00 c0       	rjmp	.+0      	; 0x30c <main+0x266>
 30c:	00 00       	nop
                _delay_ms(1000);
                PORTB |= (1 << PB0);
 30e:	85 b1       	in	r24, 0x05	; 5
 310:	81 60       	ori	r24, 0x01	; 1
 312:	85 b9       	out	0x05, r24	; 5
 314:	ff e3       	ldi	r31, 0x3F	; 63
 316:	2d e0       	ldi	r18, 0x0D	; 13
 318:	33 e0       	ldi	r19, 0x03	; 3
 31a:	f1 50       	subi	r31, 0x01	; 1
 31c:	20 40       	sbci	r18, 0x00	; 0
 31e:	30 40       	sbci	r19, 0x00	; 0
 320:	e1 f7       	brne	.-8      	; 0x31a <main+0x274>
 322:	00 c0       	rjmp	.+0      	; 0x324 <main+0x27e>
 324:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~(1 << PB0);
 326:	85 b1       	in	r24, 0x05	; 5
 328:	8e 7f       	andi	r24, 0xFE	; 254
 32a:	85 b9       	out	0x05, r24	; 5
 32c:	8f e3       	ldi	r24, 0x3F	; 63
 32e:	9d e0       	ldi	r25, 0x0D	; 13
 330:	e3 e0       	ldi	r30, 0x03	; 3
 332:	81 50       	subi	r24, 0x01	; 1
 334:	90 40       	sbci	r25, 0x00	; 0
 336:	e0 40       	sbci	r30, 0x00	; 0
 338:	e1 f7       	brne	.-8      	; 0x332 <main+0x28c>
 33a:	00 c0       	rjmp	.+0      	; 0x33c <main+0x296>
 33c:	00 00       	nop
                _delay_ms(1000);
                
                puts("A");
 33e:	88 e0       	ldi	r24, 0x08	; 8
 340:	91 e0       	ldi	r25, 0x01	; 1
 342:	0e 94 f5 04 	call	0x9ea	; 0x9ea <puts>
                input = getchar();
 346:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 34a:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 34e:	0e 94 a1 04 	call	0x942	; 0x942 <fgetc>
                printf("%c\n", input);
 352:	99 27       	eor	r25, r25
 354:	9f 93       	push	r25
 356:	8f 93       	push	r24
 358:	82 e0       	ldi	r24, 0x02	; 2
 35a:	91 e0       	ldi	r25, 0x01	; 1
 35c:	9f 93       	push	r25
 35e:	8f 93       	push	r24
 360:	0e 94 df 04 	call	0x9be	; 0x9be <printf>
 364:	0f 90       	pop	r0
 366:	0f 90       	pop	r0
 368:	0f 90       	pop	r0
 36a:	0f 90       	pop	r0
 36c:	c9 c2       	rjmp	.+1426   	; 0x900 <__stack+0x1>
            } else if (key_pressed == 0b00010010) {
 36e:	82 31       	cpi	r24, 0x12	; 18
 370:	91 05       	cpc	r25, r1
 372:	e1 f5       	brne	.+120    	; 0x3ec <main+0x346>
                // 4
                PORTB &= ~(1 << PB0);
 374:	85 b1       	in	r24, 0x05	; 5
 376:	8e 7f       	andi	r24, 0xFE	; 254
 378:	85 b9       	out	0x05, r24	; 5
 37a:	ff e3       	ldi	r31, 0x3F	; 63
 37c:	2d e0       	ldi	r18, 0x0D	; 13
 37e:	33 e0       	ldi	r19, 0x03	; 3
 380:	f1 50       	subi	r31, 0x01	; 1
 382:	20 40       	sbci	r18, 0x00	; 0
 384:	30 40       	sbci	r19, 0x00	; 0
 386:	e1 f7       	brne	.-8      	; 0x380 <main+0x2da>
 388:	00 c0       	rjmp	.+0      	; 0x38a <main+0x2e4>
 38a:	00 00       	nop
                _delay_ms(1000);
                PORTB |= (1 << PB0);
 38c:	85 b1       	in	r24, 0x05	; 5
 38e:	81 60       	ori	r24, 0x01	; 1
 390:	85 b9       	out	0x05, r24	; 5
 392:	8f e3       	ldi	r24, 0x3F	; 63
 394:	9d e0       	ldi	r25, 0x0D	; 13
 396:	e3 e0       	ldi	r30, 0x03	; 3
 398:	81 50       	subi	r24, 0x01	; 1
 39a:	90 40       	sbci	r25, 0x00	; 0
 39c:	e0 40       	sbci	r30, 0x00	; 0
 39e:	e1 f7       	brne	.-8      	; 0x398 <main+0x2f2>
 3a0:	00 c0       	rjmp	.+0      	; 0x3a2 <main+0x2fc>
 3a2:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~(1 << PB0);
 3a4:	85 b1       	in	r24, 0x05	; 5
 3a6:	8e 7f       	andi	r24, 0xFE	; 254
 3a8:	85 b9       	out	0x05, r24	; 5
 3aa:	ff e3       	ldi	r31, 0x3F	; 63
 3ac:	2d e0       	ldi	r18, 0x0D	; 13
 3ae:	33 e0       	ldi	r19, 0x03	; 3
 3b0:	f1 50       	subi	r31, 0x01	; 1
 3b2:	20 40       	sbci	r18, 0x00	; 0
 3b4:	30 40       	sbci	r19, 0x00	; 0
 3b6:	e1 f7       	brne	.-8      	; 0x3b0 <main+0x30a>
 3b8:	00 c0       	rjmp	.+0      	; 0x3ba <main+0x314>
 3ba:	00 00       	nop
                _delay_ms(1000);
                
                puts("4");
 3bc:	8a e0       	ldi	r24, 0x0A	; 10
 3be:	91 e0       	ldi	r25, 0x01	; 1
 3c0:	0e 94 f5 04 	call	0x9ea	; 0x9ea <puts>
                input = getchar();
 3c4:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 3c8:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 3cc:	0e 94 a1 04 	call	0x942	; 0x942 <fgetc>
                printf("%c\n", input);
 3d0:	99 27       	eor	r25, r25
 3d2:	9f 93       	push	r25
 3d4:	8f 93       	push	r24
 3d6:	82 e0       	ldi	r24, 0x02	; 2
 3d8:	91 e0       	ldi	r25, 0x01	; 1
 3da:	9f 93       	push	r25
 3dc:	8f 93       	push	r24
 3de:	0e 94 df 04 	call	0x9be	; 0x9be <printf>
 3e2:	0f 90       	pop	r0
 3e4:	0f 90       	pop	r0
 3e6:	0f 90       	pop	r0
 3e8:	0f 90       	pop	r0
 3ea:	8a c2       	rjmp	.+1300   	; 0x900 <__stack+0x1>
            } else if (key_pressed == 0b00100010) {
 3ec:	82 32       	cpi	r24, 0x22	; 34
 3ee:	91 05       	cpc	r25, r1
 3f0:	e1 f5       	brne	.+120    	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
                // 5
                PORTB &= ~(1 << PB0);
 3f2:	85 b1       	in	r24, 0x05	; 5
 3f4:	8e 7f       	andi	r24, 0xFE	; 254
 3f6:	85 b9       	out	0x05, r24	; 5
 3f8:	8f e3       	ldi	r24, 0x3F	; 63
 3fa:	9d e0       	ldi	r25, 0x0D	; 13
 3fc:	e3 e0       	ldi	r30, 0x03	; 3
 3fe:	81 50       	subi	r24, 0x01	; 1
 400:	90 40       	sbci	r25, 0x00	; 0
 402:	e0 40       	sbci	r30, 0x00	; 0
 404:	e1 f7       	brne	.-8      	; 0x3fe <main+0x358>
 406:	00 c0       	rjmp	.+0      	; 0x408 <__EEPROM_REGION_LENGTH__+0x8>
 408:	00 00       	nop
                _delay_ms(1000);
                PORTB |= (1 << PB0);
 40a:	85 b1       	in	r24, 0x05	; 5
 40c:	81 60       	ori	r24, 0x01	; 1
 40e:	85 b9       	out	0x05, r24	; 5
 410:	ff e3       	ldi	r31, 0x3F	; 63
 412:	2d e0       	ldi	r18, 0x0D	; 13
 414:	33 e0       	ldi	r19, 0x03	; 3
 416:	f1 50       	subi	r31, 0x01	; 1
 418:	20 40       	sbci	r18, 0x00	; 0
 41a:	30 40       	sbci	r19, 0x00	; 0
 41c:	e1 f7       	brne	.-8      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 41e:	00 c0       	rjmp	.+0      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 420:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~(1 << PB0);
 422:	85 b1       	in	r24, 0x05	; 5
 424:	8e 7f       	andi	r24, 0xFE	; 254
 426:	85 b9       	out	0x05, r24	; 5
 428:	8f e3       	ldi	r24, 0x3F	; 63
 42a:	9d e0       	ldi	r25, 0x0D	; 13
 42c:	e3 e0       	ldi	r30, 0x03	; 3
 42e:	81 50       	subi	r24, 0x01	; 1
 430:	90 40       	sbci	r25, 0x00	; 0
 432:	e0 40       	sbci	r30, 0x00	; 0
 434:	e1 f7       	brne	.-8      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 436:	00 c0       	rjmp	.+0      	; 0x438 <__EEPROM_REGION_LENGTH__+0x38>
 438:	00 00       	nop
                _delay_ms(1000);
                
                puts("5");
 43a:	8c e0       	ldi	r24, 0x0C	; 12
 43c:	91 e0       	ldi	r25, 0x01	; 1
 43e:	0e 94 f5 04 	call	0x9ea	; 0x9ea <puts>
                input = getchar();
 442:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 446:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 44a:	0e 94 a1 04 	call	0x942	; 0x942 <fgetc>
                printf("%c\n", input);
 44e:	99 27       	eor	r25, r25
 450:	9f 93       	push	r25
 452:	8f 93       	push	r24
 454:	82 e0       	ldi	r24, 0x02	; 2
 456:	91 e0       	ldi	r25, 0x01	; 1
 458:	9f 93       	push	r25
 45a:	8f 93       	push	r24
 45c:	0e 94 df 04 	call	0x9be	; 0x9be <printf>
 460:	0f 90       	pop	r0
 462:	0f 90       	pop	r0
 464:	0f 90       	pop	r0
 466:	0f 90       	pop	r0
 468:	4b c2       	rjmp	.+1174   	; 0x900 <__stack+0x1>
            } else if (key_pressed == 0b01000010) {
 46a:	82 34       	cpi	r24, 0x42	; 66
 46c:	91 05       	cpc	r25, r1
 46e:	29 f5       	brne	.+74     	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
                // 6
                PORTB &= ~(1 << PB0);
 470:	85 b1       	in	r24, 0x05	; 5
 472:	8e 7f       	andi	r24, 0xFE	; 254
 474:	85 b9       	out	0x05, r24	; 5
 476:	ff e3       	ldi	r31, 0x3F	; 63
 478:	2d e0       	ldi	r18, 0x0D	; 13
 47a:	33 e0       	ldi	r19, 0x03	; 3
 47c:	f1 50       	subi	r31, 0x01	; 1
 47e:	20 40       	sbci	r18, 0x00	; 0
 480:	30 40       	sbci	r19, 0x00	; 0
 482:	e1 f7       	brne	.-8      	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
 484:	00 c0       	rjmp	.+0      	; 0x486 <__EEPROM_REGION_LENGTH__+0x86>
 486:	00 00       	nop
                _delay_ms(1000);
                PORTB |= (1 << PB0);
 488:	85 b1       	in	r24, 0x05	; 5
 48a:	81 60       	ori	r24, 0x01	; 1
 48c:	85 b9       	out	0x05, r24	; 5
 48e:	8f e3       	ldi	r24, 0x3F	; 63
 490:	9d e0       	ldi	r25, 0x0D	; 13
 492:	e3 e0       	ldi	r30, 0x03	; 3
 494:	81 50       	subi	r24, 0x01	; 1
 496:	90 40       	sbci	r25, 0x00	; 0
 498:	e0 40       	sbci	r30, 0x00	; 0
 49a:	e1 f7       	brne	.-8      	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
 49c:	00 c0       	rjmp	.+0      	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
 49e:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~(1 << PB0);
 4a0:	85 b1       	in	r24, 0x05	; 5
 4a2:	8e 7f       	andi	r24, 0xFE	; 254
 4a4:	85 b9       	out	0x05, r24	; 5
 4a6:	ff e3       	ldi	r31, 0x3F	; 63
 4a8:	2d e0       	ldi	r18, 0x0D	; 13
 4aa:	33 e0       	ldi	r19, 0x03	; 3
 4ac:	f1 50       	subi	r31, 0x01	; 1
 4ae:	20 40       	sbci	r18, 0x00	; 0
 4b0:	30 40       	sbci	r19, 0x00	; 0
 4b2:	e1 f7       	brne	.-8      	; 0x4ac <__EEPROM_REGION_LENGTH__+0xac>
 4b4:	00 c0       	rjmp	.+0      	; 0x4b6 <__EEPROM_REGION_LENGTH__+0xb6>
 4b6:	00 00       	nop
 4b8:	23 c2       	rjmp	.+1094   	; 0x900 <__stack+0x1>
                _delay_ms(1000);
                
                //puts("6");
            } else if (key_pressed == 0b10000010) {
 4ba:	82 38       	cpi	r24, 0x82	; 130
 4bc:	91 05       	cpc	r25, r1
 4be:	e1 f5       	brne	.+120    	; 0x538 <__EEPROM_REGION_LENGTH__+0x138>
                // B
                PORTB &= ~(1 << PB0);
 4c0:	85 b1       	in	r24, 0x05	; 5
 4c2:	8e 7f       	andi	r24, 0xFE	; 254
 4c4:	85 b9       	out	0x05, r24	; 5
 4c6:	8f e3       	ldi	r24, 0x3F	; 63
 4c8:	9d e0       	ldi	r25, 0x0D	; 13
 4ca:	e3 e0       	ldi	r30, 0x03	; 3
 4cc:	81 50       	subi	r24, 0x01	; 1
 4ce:	90 40       	sbci	r25, 0x00	; 0
 4d0:	e0 40       	sbci	r30, 0x00	; 0
 4d2:	e1 f7       	brne	.-8      	; 0x4cc <__EEPROM_REGION_LENGTH__+0xcc>
 4d4:	00 c0       	rjmp	.+0      	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 4d6:	00 00       	nop
                _delay_ms(1000);
                PORTB |= (1 << PB0);
 4d8:	85 b1       	in	r24, 0x05	; 5
 4da:	81 60       	ori	r24, 0x01	; 1
 4dc:	85 b9       	out	0x05, r24	; 5
 4de:	ff e3       	ldi	r31, 0x3F	; 63
 4e0:	2d e0       	ldi	r18, 0x0D	; 13
 4e2:	33 e0       	ldi	r19, 0x03	; 3
 4e4:	f1 50       	subi	r31, 0x01	; 1
 4e6:	20 40       	sbci	r18, 0x00	; 0
 4e8:	30 40       	sbci	r19, 0x00	; 0
 4ea:	e1 f7       	brne	.-8      	; 0x4e4 <__EEPROM_REGION_LENGTH__+0xe4>
 4ec:	00 c0       	rjmp	.+0      	; 0x4ee <__EEPROM_REGION_LENGTH__+0xee>
 4ee:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~(1 << PB0);
 4f0:	85 b1       	in	r24, 0x05	; 5
 4f2:	8e 7f       	andi	r24, 0xFE	; 254
 4f4:	85 b9       	out	0x05, r24	; 5
 4f6:	8f e3       	ldi	r24, 0x3F	; 63
 4f8:	9d e0       	ldi	r25, 0x0D	; 13
 4fa:	e3 e0       	ldi	r30, 0x03	; 3
 4fc:	81 50       	subi	r24, 0x01	; 1
 4fe:	90 40       	sbci	r25, 0x00	; 0
 500:	e0 40       	sbci	r30, 0x00	; 0
 502:	e1 f7       	brne	.-8      	; 0x4fc <__EEPROM_REGION_LENGTH__+0xfc>
 504:	00 c0       	rjmp	.+0      	; 0x506 <__EEPROM_REGION_LENGTH__+0x106>
 506:	00 00       	nop
                _delay_ms(1000);
                
                puts("B");
 508:	8e e0       	ldi	r24, 0x0E	; 14
 50a:	91 e0       	ldi	r25, 0x01	; 1
 50c:	0e 94 f5 04 	call	0x9ea	; 0x9ea <puts>
                input = getchar();
 510:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 514:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 518:	0e 94 a1 04 	call	0x942	; 0x942 <fgetc>
                printf("%c\n", input);
 51c:	99 27       	eor	r25, r25
 51e:	9f 93       	push	r25
 520:	8f 93       	push	r24
 522:	82 e0       	ldi	r24, 0x02	; 2
 524:	91 e0       	ldi	r25, 0x01	; 1
 526:	9f 93       	push	r25
 528:	8f 93       	push	r24
 52a:	0e 94 df 04 	call	0x9be	; 0x9be <printf>
 52e:	0f 90       	pop	r0
 530:	0f 90       	pop	r0
 532:	0f 90       	pop	r0
 534:	0f 90       	pop	r0
 536:	e4 c1       	rjmp	.+968    	; 0x900 <__stack+0x1>
            } else if (key_pressed == 0b00010100) {
 538:	84 31       	cpi	r24, 0x14	; 20
 53a:	91 05       	cpc	r25, r1
 53c:	e1 f5       	brne	.+120    	; 0x5b6 <__EEPROM_REGION_LENGTH__+0x1b6>
                // 7
                PORTB &= ~(1 << PB0);
 53e:	85 b1       	in	r24, 0x05	; 5
 540:	8e 7f       	andi	r24, 0xFE	; 254
 542:	85 b9       	out	0x05, r24	; 5
 544:	ff e3       	ldi	r31, 0x3F	; 63
 546:	2d e0       	ldi	r18, 0x0D	; 13
 548:	33 e0       	ldi	r19, 0x03	; 3
 54a:	f1 50       	subi	r31, 0x01	; 1
 54c:	20 40       	sbci	r18, 0x00	; 0
 54e:	30 40       	sbci	r19, 0x00	; 0
 550:	e1 f7       	brne	.-8      	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
 552:	00 c0       	rjmp	.+0      	; 0x554 <__EEPROM_REGION_LENGTH__+0x154>
 554:	00 00       	nop
                _delay_ms(1000);
                PORTB |= (1 << PB0);
 556:	85 b1       	in	r24, 0x05	; 5
 558:	81 60       	ori	r24, 0x01	; 1
 55a:	85 b9       	out	0x05, r24	; 5
 55c:	8f e3       	ldi	r24, 0x3F	; 63
 55e:	9d e0       	ldi	r25, 0x0D	; 13
 560:	e3 e0       	ldi	r30, 0x03	; 3
 562:	81 50       	subi	r24, 0x01	; 1
 564:	90 40       	sbci	r25, 0x00	; 0
 566:	e0 40       	sbci	r30, 0x00	; 0
 568:	e1 f7       	brne	.-8      	; 0x562 <__EEPROM_REGION_LENGTH__+0x162>
 56a:	00 c0       	rjmp	.+0      	; 0x56c <__EEPROM_REGION_LENGTH__+0x16c>
 56c:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~(1 << PB0);
 56e:	85 b1       	in	r24, 0x05	; 5
 570:	8e 7f       	andi	r24, 0xFE	; 254
 572:	85 b9       	out	0x05, r24	; 5
 574:	ff e3       	ldi	r31, 0x3F	; 63
 576:	2d e0       	ldi	r18, 0x0D	; 13
 578:	33 e0       	ldi	r19, 0x03	; 3
 57a:	f1 50       	subi	r31, 0x01	; 1
 57c:	20 40       	sbci	r18, 0x00	; 0
 57e:	30 40       	sbci	r19, 0x00	; 0
 580:	e1 f7       	brne	.-8      	; 0x57a <__EEPROM_REGION_LENGTH__+0x17a>
 582:	00 c0       	rjmp	.+0      	; 0x584 <__EEPROM_REGION_LENGTH__+0x184>
 584:	00 00       	nop
                _delay_ms(1000);
                
                puts("7");
 586:	80 e1       	ldi	r24, 0x10	; 16
 588:	91 e0       	ldi	r25, 0x01	; 1
 58a:	0e 94 f5 04 	call	0x9ea	; 0x9ea <puts>
                input = getchar();
 58e:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 592:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 596:	0e 94 a1 04 	call	0x942	; 0x942 <fgetc>
                printf("%c\n", input);
 59a:	99 27       	eor	r25, r25
 59c:	9f 93       	push	r25
 59e:	8f 93       	push	r24
 5a0:	82 e0       	ldi	r24, 0x02	; 2
 5a2:	91 e0       	ldi	r25, 0x01	; 1
 5a4:	9f 93       	push	r25
 5a6:	8f 93       	push	r24
 5a8:	0e 94 df 04 	call	0x9be	; 0x9be <printf>
 5ac:	0f 90       	pop	r0
 5ae:	0f 90       	pop	r0
 5b0:	0f 90       	pop	r0
 5b2:	0f 90       	pop	r0
 5b4:	a5 c1       	rjmp	.+842    	; 0x900 <__stack+0x1>
            } else if (key_pressed == 0b00100100) {
 5b6:	84 32       	cpi	r24, 0x24	; 36
 5b8:	91 05       	cpc	r25, r1
 5ba:	e1 f5       	brne	.+120    	; 0x634 <__EEPROM_REGION_LENGTH__+0x234>
                // 8
                PORTB &= ~(1 << PB0);
 5bc:	85 b1       	in	r24, 0x05	; 5
 5be:	8e 7f       	andi	r24, 0xFE	; 254
 5c0:	85 b9       	out	0x05, r24	; 5
 5c2:	8f e3       	ldi	r24, 0x3F	; 63
 5c4:	9d e0       	ldi	r25, 0x0D	; 13
 5c6:	e3 e0       	ldi	r30, 0x03	; 3
 5c8:	81 50       	subi	r24, 0x01	; 1
 5ca:	90 40       	sbci	r25, 0x00	; 0
 5cc:	e0 40       	sbci	r30, 0x00	; 0
 5ce:	e1 f7       	brne	.-8      	; 0x5c8 <__EEPROM_REGION_LENGTH__+0x1c8>
 5d0:	00 c0       	rjmp	.+0      	; 0x5d2 <__EEPROM_REGION_LENGTH__+0x1d2>
 5d2:	00 00       	nop
                _delay_ms(1000);
                PORTB |= (1 << PB0);
 5d4:	85 b1       	in	r24, 0x05	; 5
 5d6:	81 60       	ori	r24, 0x01	; 1
 5d8:	85 b9       	out	0x05, r24	; 5
 5da:	ff e3       	ldi	r31, 0x3F	; 63
 5dc:	2d e0       	ldi	r18, 0x0D	; 13
 5de:	33 e0       	ldi	r19, 0x03	; 3
 5e0:	f1 50       	subi	r31, 0x01	; 1
 5e2:	20 40       	sbci	r18, 0x00	; 0
 5e4:	30 40       	sbci	r19, 0x00	; 0
 5e6:	e1 f7       	brne	.-8      	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
 5e8:	00 c0       	rjmp	.+0      	; 0x5ea <__EEPROM_REGION_LENGTH__+0x1ea>
 5ea:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~(1 << PB0);
 5ec:	85 b1       	in	r24, 0x05	; 5
 5ee:	8e 7f       	andi	r24, 0xFE	; 254
 5f0:	85 b9       	out	0x05, r24	; 5
 5f2:	8f e3       	ldi	r24, 0x3F	; 63
 5f4:	9d e0       	ldi	r25, 0x0D	; 13
 5f6:	e3 e0       	ldi	r30, 0x03	; 3
 5f8:	81 50       	subi	r24, 0x01	; 1
 5fa:	90 40       	sbci	r25, 0x00	; 0
 5fc:	e0 40       	sbci	r30, 0x00	; 0
 5fe:	e1 f7       	brne	.-8      	; 0x5f8 <__EEPROM_REGION_LENGTH__+0x1f8>
 600:	00 c0       	rjmp	.+0      	; 0x602 <__EEPROM_REGION_LENGTH__+0x202>
 602:	00 00       	nop
                _delay_ms(1000);
                
                puts("8");
 604:	82 e1       	ldi	r24, 0x12	; 18
 606:	91 e0       	ldi	r25, 0x01	; 1
 608:	0e 94 f5 04 	call	0x9ea	; 0x9ea <puts>
                input = getchar();
 60c:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 610:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 614:	0e 94 a1 04 	call	0x942	; 0x942 <fgetc>
                printf("%c\n", input);
 618:	99 27       	eor	r25, r25
 61a:	9f 93       	push	r25
 61c:	8f 93       	push	r24
 61e:	82 e0       	ldi	r24, 0x02	; 2
 620:	91 e0       	ldi	r25, 0x01	; 1
 622:	9f 93       	push	r25
 624:	8f 93       	push	r24
 626:	0e 94 df 04 	call	0x9be	; 0x9be <printf>
 62a:	0f 90       	pop	r0
 62c:	0f 90       	pop	r0
 62e:	0f 90       	pop	r0
 630:	0f 90       	pop	r0
 632:	66 c1       	rjmp	.+716    	; 0x900 <__stack+0x1>
            } else if (key_pressed == 0b01000100) {
 634:	84 34       	cpi	r24, 0x44	; 68
 636:	91 05       	cpc	r25, r1
 638:	e1 f5       	brne	.+120    	; 0x6b2 <__EEPROM_REGION_LENGTH__+0x2b2>
                // 9
                PORTB &= ~(1 << PB0);
 63a:	85 b1       	in	r24, 0x05	; 5
 63c:	8e 7f       	andi	r24, 0xFE	; 254
 63e:	85 b9       	out	0x05, r24	; 5
 640:	ff e3       	ldi	r31, 0x3F	; 63
 642:	2d e0       	ldi	r18, 0x0D	; 13
 644:	33 e0       	ldi	r19, 0x03	; 3
 646:	f1 50       	subi	r31, 0x01	; 1
 648:	20 40       	sbci	r18, 0x00	; 0
 64a:	30 40       	sbci	r19, 0x00	; 0
 64c:	e1 f7       	brne	.-8      	; 0x646 <__EEPROM_REGION_LENGTH__+0x246>
 64e:	00 c0       	rjmp	.+0      	; 0x650 <__EEPROM_REGION_LENGTH__+0x250>
 650:	00 00       	nop
                _delay_ms(1000);
                PORTB |= (1 << PB0);
 652:	85 b1       	in	r24, 0x05	; 5
 654:	81 60       	ori	r24, 0x01	; 1
 656:	85 b9       	out	0x05, r24	; 5
 658:	8f e3       	ldi	r24, 0x3F	; 63
 65a:	9d e0       	ldi	r25, 0x0D	; 13
 65c:	e3 e0       	ldi	r30, 0x03	; 3
 65e:	81 50       	subi	r24, 0x01	; 1
 660:	90 40       	sbci	r25, 0x00	; 0
 662:	e0 40       	sbci	r30, 0x00	; 0
 664:	e1 f7       	brne	.-8      	; 0x65e <__EEPROM_REGION_LENGTH__+0x25e>
 666:	00 c0       	rjmp	.+0      	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
 668:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~(1 << PB0);
 66a:	85 b1       	in	r24, 0x05	; 5
 66c:	8e 7f       	andi	r24, 0xFE	; 254
 66e:	85 b9       	out	0x05, r24	; 5
 670:	ff e3       	ldi	r31, 0x3F	; 63
 672:	2d e0       	ldi	r18, 0x0D	; 13
 674:	33 e0       	ldi	r19, 0x03	; 3
 676:	f1 50       	subi	r31, 0x01	; 1
 678:	20 40       	sbci	r18, 0x00	; 0
 67a:	30 40       	sbci	r19, 0x00	; 0
 67c:	e1 f7       	brne	.-8      	; 0x676 <__EEPROM_REGION_LENGTH__+0x276>
 67e:	00 c0       	rjmp	.+0      	; 0x680 <__EEPROM_REGION_LENGTH__+0x280>
 680:	00 00       	nop
                _delay_ms(1000);
                
                puts("9");
 682:	84 e1       	ldi	r24, 0x14	; 20
 684:	91 e0       	ldi	r25, 0x01	; 1
 686:	0e 94 f5 04 	call	0x9ea	; 0x9ea <puts>
                input = getchar();
 68a:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 68e:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 692:	0e 94 a1 04 	call	0x942	; 0x942 <fgetc>
                printf("%c\n", input);
 696:	99 27       	eor	r25, r25
 698:	9f 93       	push	r25
 69a:	8f 93       	push	r24
 69c:	82 e0       	ldi	r24, 0x02	; 2
 69e:	91 e0       	ldi	r25, 0x01	; 1
 6a0:	9f 93       	push	r25
 6a2:	8f 93       	push	r24
 6a4:	0e 94 df 04 	call	0x9be	; 0x9be <printf>
 6a8:	0f 90       	pop	r0
 6aa:	0f 90       	pop	r0
 6ac:	0f 90       	pop	r0
 6ae:	0f 90       	pop	r0
 6b0:	27 c1       	rjmp	.+590    	; 0x900 <__stack+0x1>
            } else if (key_pressed == 0b10000100) {
 6b2:	84 38       	cpi	r24, 0x84	; 132
 6b4:	91 05       	cpc	r25, r1
 6b6:	e1 f5       	brne	.+120    	; 0x730 <__EEPROM_REGION_LENGTH__+0x330>
                // C
                PORTB &= ~(1 << PB0);
 6b8:	85 b1       	in	r24, 0x05	; 5
 6ba:	8e 7f       	andi	r24, 0xFE	; 254
 6bc:	85 b9       	out	0x05, r24	; 5
 6be:	8f e3       	ldi	r24, 0x3F	; 63
 6c0:	9d e0       	ldi	r25, 0x0D	; 13
 6c2:	e3 e0       	ldi	r30, 0x03	; 3
 6c4:	81 50       	subi	r24, 0x01	; 1
 6c6:	90 40       	sbci	r25, 0x00	; 0
 6c8:	e0 40       	sbci	r30, 0x00	; 0
 6ca:	e1 f7       	brne	.-8      	; 0x6c4 <__EEPROM_REGION_LENGTH__+0x2c4>
 6cc:	00 c0       	rjmp	.+0      	; 0x6ce <__EEPROM_REGION_LENGTH__+0x2ce>
 6ce:	00 00       	nop
                _delay_ms(1000);
                PORTB |= (1 << PB0);
 6d0:	85 b1       	in	r24, 0x05	; 5
 6d2:	81 60       	ori	r24, 0x01	; 1
 6d4:	85 b9       	out	0x05, r24	; 5
 6d6:	ff e3       	ldi	r31, 0x3F	; 63
 6d8:	2d e0       	ldi	r18, 0x0D	; 13
 6da:	33 e0       	ldi	r19, 0x03	; 3
 6dc:	f1 50       	subi	r31, 0x01	; 1
 6de:	20 40       	sbci	r18, 0x00	; 0
 6e0:	30 40       	sbci	r19, 0x00	; 0
 6e2:	e1 f7       	brne	.-8      	; 0x6dc <__EEPROM_REGION_LENGTH__+0x2dc>
 6e4:	00 c0       	rjmp	.+0      	; 0x6e6 <__EEPROM_REGION_LENGTH__+0x2e6>
 6e6:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~(1 << PB0);
 6e8:	85 b1       	in	r24, 0x05	; 5
 6ea:	8e 7f       	andi	r24, 0xFE	; 254
 6ec:	85 b9       	out	0x05, r24	; 5
 6ee:	8f e3       	ldi	r24, 0x3F	; 63
 6f0:	9d e0       	ldi	r25, 0x0D	; 13
 6f2:	e3 e0       	ldi	r30, 0x03	; 3
 6f4:	81 50       	subi	r24, 0x01	; 1
 6f6:	90 40       	sbci	r25, 0x00	; 0
 6f8:	e0 40       	sbci	r30, 0x00	; 0
 6fa:	e1 f7       	brne	.-8      	; 0x6f4 <__EEPROM_REGION_LENGTH__+0x2f4>
 6fc:	00 c0       	rjmp	.+0      	; 0x6fe <__EEPROM_REGION_LENGTH__+0x2fe>
 6fe:	00 00       	nop
                _delay_ms(1000);
                
                puts("C");
 700:	86 e1       	ldi	r24, 0x16	; 22
 702:	91 e0       	ldi	r25, 0x01	; 1
 704:	0e 94 f5 04 	call	0x9ea	; 0x9ea <puts>
                input = getchar();
 708:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 70c:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 710:	0e 94 a1 04 	call	0x942	; 0x942 <fgetc>
                printf("%c\n", input);
 714:	99 27       	eor	r25, r25
 716:	9f 93       	push	r25
 718:	8f 93       	push	r24
 71a:	82 e0       	ldi	r24, 0x02	; 2
 71c:	91 e0       	ldi	r25, 0x01	; 1
 71e:	9f 93       	push	r25
 720:	8f 93       	push	r24
 722:	0e 94 df 04 	call	0x9be	; 0x9be <printf>
 726:	0f 90       	pop	r0
 728:	0f 90       	pop	r0
 72a:	0f 90       	pop	r0
 72c:	0f 90       	pop	r0
 72e:	e8 c0       	rjmp	.+464    	; 0x900 <__stack+0x1>
            } else if (key_pressed == 0b00011000) {
 730:	88 31       	cpi	r24, 0x18	; 24
 732:	91 05       	cpc	r25, r1
 734:	49 f5       	brne	.+82     	; 0x788 <__EEPROM_REGION_LENGTH__+0x388>
                // *
                PORTB &= ~(1 << PB0);
 736:	85 b1       	in	r24, 0x05	; 5
 738:	8e 7f       	andi	r24, 0xFE	; 254
 73a:	85 b9       	out	0x05, r24	; 5
 73c:	ff e3       	ldi	r31, 0x3F	; 63
 73e:	2d e0       	ldi	r18, 0x0D	; 13
 740:	33 e0       	ldi	r19, 0x03	; 3
 742:	f1 50       	subi	r31, 0x01	; 1
 744:	20 40       	sbci	r18, 0x00	; 0
 746:	30 40       	sbci	r19, 0x00	; 0
 748:	e1 f7       	brne	.-8      	; 0x742 <__EEPROM_REGION_LENGTH__+0x342>
 74a:	00 c0       	rjmp	.+0      	; 0x74c <__EEPROM_REGION_LENGTH__+0x34c>
 74c:	00 00       	nop
                _delay_ms(1000);
                PORTB |= (1 << PB0);
 74e:	85 b1       	in	r24, 0x05	; 5
 750:	81 60       	ori	r24, 0x01	; 1
 752:	85 b9       	out	0x05, r24	; 5
 754:	8f e3       	ldi	r24, 0x3F	; 63
 756:	9d e0       	ldi	r25, 0x0D	; 13
 758:	e3 e0       	ldi	r30, 0x03	; 3
 75a:	81 50       	subi	r24, 0x01	; 1
 75c:	90 40       	sbci	r25, 0x00	; 0
 75e:	e0 40       	sbci	r30, 0x00	; 0
 760:	e1 f7       	brne	.-8      	; 0x75a <__EEPROM_REGION_LENGTH__+0x35a>
 762:	00 c0       	rjmp	.+0      	; 0x764 <__EEPROM_REGION_LENGTH__+0x364>
 764:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~(1 << PB0);
 766:	85 b1       	in	r24, 0x05	; 5
 768:	8e 7f       	andi	r24, 0xFE	; 254
 76a:	85 b9       	out	0x05, r24	; 5
 76c:	ff e3       	ldi	r31, 0x3F	; 63
 76e:	2d e0       	ldi	r18, 0x0D	; 13
 770:	33 e0       	ldi	r19, 0x03	; 3
 772:	f1 50       	subi	r31, 0x01	; 1
 774:	20 40       	sbci	r18, 0x00	; 0
 776:	30 40       	sbci	r19, 0x00	; 0
 778:	e1 f7       	brne	.-8      	; 0x772 <__EEPROM_REGION_LENGTH__+0x372>
 77a:	00 c0       	rjmp	.+0      	; 0x77c <__EEPROM_REGION_LENGTH__+0x37c>
 77c:	00 00       	nop
                _delay_ms(1000);
                
                puts("*");
 77e:	88 e1       	ldi	r24, 0x18	; 24
 780:	91 e0       	ldi	r25, 0x01	; 1
 782:	0e 94 f5 04 	call	0x9ea	; 0x9ea <puts>
 786:	bc c0       	rjmp	.+376    	; 0x900 <__stack+0x1>
            } else if (key_pressed == 0b00101000) {
 788:	88 32       	cpi	r24, 0x28	; 40
 78a:	91 05       	cpc	r25, r1
 78c:	e1 f5       	brne	.+120    	; 0x806 <__DATA_REGION_LENGTH__+0x6>
                // 0
                PORTB &= ~(1 << PB0);
 78e:	85 b1       	in	r24, 0x05	; 5
 790:	8e 7f       	andi	r24, 0xFE	; 254
 792:	85 b9       	out	0x05, r24	; 5
 794:	8f e3       	ldi	r24, 0x3F	; 63
 796:	9d e0       	ldi	r25, 0x0D	; 13
 798:	e3 e0       	ldi	r30, 0x03	; 3
 79a:	81 50       	subi	r24, 0x01	; 1
 79c:	90 40       	sbci	r25, 0x00	; 0
 79e:	e0 40       	sbci	r30, 0x00	; 0
 7a0:	e1 f7       	brne	.-8      	; 0x79a <__EEPROM_REGION_LENGTH__+0x39a>
 7a2:	00 c0       	rjmp	.+0      	; 0x7a4 <__EEPROM_REGION_LENGTH__+0x3a4>
 7a4:	00 00       	nop
                _delay_ms(1000);
                PORTB |= (1 << PB0);
 7a6:	85 b1       	in	r24, 0x05	; 5
 7a8:	81 60       	ori	r24, 0x01	; 1
 7aa:	85 b9       	out	0x05, r24	; 5
 7ac:	ff e3       	ldi	r31, 0x3F	; 63
 7ae:	2d e0       	ldi	r18, 0x0D	; 13
 7b0:	33 e0       	ldi	r19, 0x03	; 3
 7b2:	f1 50       	subi	r31, 0x01	; 1
 7b4:	20 40       	sbci	r18, 0x00	; 0
 7b6:	30 40       	sbci	r19, 0x00	; 0
 7b8:	e1 f7       	brne	.-8      	; 0x7b2 <__EEPROM_REGION_LENGTH__+0x3b2>
 7ba:	00 c0       	rjmp	.+0      	; 0x7bc <__EEPROM_REGION_LENGTH__+0x3bc>
 7bc:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~(1 << PB0);
 7be:	85 b1       	in	r24, 0x05	; 5
 7c0:	8e 7f       	andi	r24, 0xFE	; 254
 7c2:	85 b9       	out	0x05, r24	; 5
 7c4:	8f e3       	ldi	r24, 0x3F	; 63
 7c6:	9d e0       	ldi	r25, 0x0D	; 13
 7c8:	e3 e0       	ldi	r30, 0x03	; 3
 7ca:	81 50       	subi	r24, 0x01	; 1
 7cc:	90 40       	sbci	r25, 0x00	; 0
 7ce:	e0 40       	sbci	r30, 0x00	; 0
 7d0:	e1 f7       	brne	.-8      	; 0x7ca <__EEPROM_REGION_LENGTH__+0x3ca>
 7d2:	00 c0       	rjmp	.+0      	; 0x7d4 <__EEPROM_REGION_LENGTH__+0x3d4>
 7d4:	00 00       	nop
                _delay_ms(1000);
                
                puts("0");
 7d6:	8a e1       	ldi	r24, 0x1A	; 26
 7d8:	91 e0       	ldi	r25, 0x01	; 1
 7da:	0e 94 f5 04 	call	0x9ea	; 0x9ea <puts>
                input = getchar();
 7de:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 7e2:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 7e6:	0e 94 a1 04 	call	0x942	; 0x942 <fgetc>
                printf("%c\n", input);
 7ea:	99 27       	eor	r25, r25
 7ec:	9f 93       	push	r25
 7ee:	8f 93       	push	r24
 7f0:	82 e0       	ldi	r24, 0x02	; 2
 7f2:	91 e0       	ldi	r25, 0x01	; 1
 7f4:	9f 93       	push	r25
 7f6:	8f 93       	push	r24
 7f8:	0e 94 df 04 	call	0x9be	; 0x9be <printf>
 7fc:	0f 90       	pop	r0
 7fe:	0f 90       	pop	r0
 800:	0f 90       	pop	r0
 802:	0f 90       	pop	r0
 804:	7d c0       	rjmp	.+250    	; 0x900 <__stack+0x1>
            } else if (key_pressed == 0b01001000) {
 806:	88 34       	cpi	r24, 0x48	; 72
 808:	91 05       	cpc	r25, r1
 80a:	e1 f5       	brne	.+120    	; 0x884 <__DATA_REGION_LENGTH__+0x84>
                // #
                PORTB &= ~(1 << PB0);
 80c:	85 b1       	in	r24, 0x05	; 5
 80e:	8e 7f       	andi	r24, 0xFE	; 254
 810:	85 b9       	out	0x05, r24	; 5
 812:	ff e3       	ldi	r31, 0x3F	; 63
 814:	2d e0       	ldi	r18, 0x0D	; 13
 816:	33 e0       	ldi	r19, 0x03	; 3
 818:	f1 50       	subi	r31, 0x01	; 1
 81a:	20 40       	sbci	r18, 0x00	; 0
 81c:	30 40       	sbci	r19, 0x00	; 0
 81e:	e1 f7       	brne	.-8      	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 820:	00 c0       	rjmp	.+0      	; 0x822 <__DATA_REGION_LENGTH__+0x22>
 822:	00 00       	nop
                _delay_ms(1000);
                PORTB |= (1 << PB0);
 824:	85 b1       	in	r24, 0x05	; 5
 826:	81 60       	ori	r24, 0x01	; 1
 828:	85 b9       	out	0x05, r24	; 5
 82a:	8f e3       	ldi	r24, 0x3F	; 63
 82c:	9d e0       	ldi	r25, 0x0D	; 13
 82e:	e3 e0       	ldi	r30, 0x03	; 3
 830:	81 50       	subi	r24, 0x01	; 1
 832:	90 40       	sbci	r25, 0x00	; 0
 834:	e0 40       	sbci	r30, 0x00	; 0
 836:	e1 f7       	brne	.-8      	; 0x830 <__DATA_REGION_LENGTH__+0x30>
 838:	00 c0       	rjmp	.+0      	; 0x83a <__DATA_REGION_LENGTH__+0x3a>
 83a:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~(1 << PB0);
 83c:	85 b1       	in	r24, 0x05	; 5
 83e:	8e 7f       	andi	r24, 0xFE	; 254
 840:	85 b9       	out	0x05, r24	; 5
 842:	ff e3       	ldi	r31, 0x3F	; 63
 844:	2d e0       	ldi	r18, 0x0D	; 13
 846:	33 e0       	ldi	r19, 0x03	; 3
 848:	f1 50       	subi	r31, 0x01	; 1
 84a:	20 40       	sbci	r18, 0x00	; 0
 84c:	30 40       	sbci	r19, 0x00	; 0
 84e:	e1 f7       	brne	.-8      	; 0x848 <__DATA_REGION_LENGTH__+0x48>
 850:	00 c0       	rjmp	.+0      	; 0x852 <__DATA_REGION_LENGTH__+0x52>
 852:	00 00       	nop
                _delay_ms(1000);
                
                puts("#");
 854:	8c e1       	ldi	r24, 0x1C	; 28
 856:	91 e0       	ldi	r25, 0x01	; 1
 858:	0e 94 f5 04 	call	0x9ea	; 0x9ea <puts>
                input = getchar();
 85c:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 860:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 864:	0e 94 a1 04 	call	0x942	; 0x942 <fgetc>
                printf("%c\n", input);
 868:	99 27       	eor	r25, r25
 86a:	9f 93       	push	r25
 86c:	8f 93       	push	r24
 86e:	82 e0       	ldi	r24, 0x02	; 2
 870:	91 e0       	ldi	r25, 0x01	; 1
 872:	9f 93       	push	r25
 874:	8f 93       	push	r24
 876:	0e 94 df 04 	call	0x9be	; 0x9be <printf>
 87a:	0f 90       	pop	r0
 87c:	0f 90       	pop	r0
 87e:	0f 90       	pop	r0
 880:	0f 90       	pop	r0
 882:	3e c0       	rjmp	.+124    	; 0x900 <__stack+0x1>
            } else if (key_pressed == 0b10001000) {
 884:	88 38       	cpi	r24, 0x88	; 136
 886:	91 05       	cpc	r25, r1
 888:	d9 f5       	brne	.+118    	; 0x900 <__stack+0x1>
                // D
                PORTB &= ~(1 << PB0);
 88a:	85 b1       	in	r24, 0x05	; 5
 88c:	8e 7f       	andi	r24, 0xFE	; 254
 88e:	85 b9       	out	0x05, r24	; 5
 890:	8f e3       	ldi	r24, 0x3F	; 63
 892:	9d e0       	ldi	r25, 0x0D	; 13
 894:	e3 e0       	ldi	r30, 0x03	; 3
 896:	81 50       	subi	r24, 0x01	; 1
 898:	90 40       	sbci	r25, 0x00	; 0
 89a:	e0 40       	sbci	r30, 0x00	; 0
 89c:	e1 f7       	brne	.-8      	; 0x896 <__DATA_REGION_LENGTH__+0x96>
 89e:	00 c0       	rjmp	.+0      	; 0x8a0 <__DATA_REGION_LENGTH__+0xa0>
 8a0:	00 00       	nop
                _delay_ms(1000);
                PORTB |= (1 << PB0);
 8a2:	85 b1       	in	r24, 0x05	; 5
 8a4:	81 60       	ori	r24, 0x01	; 1
 8a6:	85 b9       	out	0x05, r24	; 5
 8a8:	ff e3       	ldi	r31, 0x3F	; 63
 8aa:	2d e0       	ldi	r18, 0x0D	; 13
 8ac:	33 e0       	ldi	r19, 0x03	; 3
 8ae:	f1 50       	subi	r31, 0x01	; 1
 8b0:	20 40       	sbci	r18, 0x00	; 0
 8b2:	30 40       	sbci	r19, 0x00	; 0
 8b4:	e1 f7       	brne	.-8      	; 0x8ae <__DATA_REGION_LENGTH__+0xae>
 8b6:	00 c0       	rjmp	.+0      	; 0x8b8 <__DATA_REGION_LENGTH__+0xb8>
 8b8:	00 00       	nop
                _delay_ms(1000);
                PORTB &= ~(1 << PB0);
 8ba:	85 b1       	in	r24, 0x05	; 5
 8bc:	8e 7f       	andi	r24, 0xFE	; 254
 8be:	85 b9       	out	0x05, r24	; 5
 8c0:	8f e3       	ldi	r24, 0x3F	; 63
 8c2:	9d e0       	ldi	r25, 0x0D	; 13
 8c4:	e3 e0       	ldi	r30, 0x03	; 3
 8c6:	81 50       	subi	r24, 0x01	; 1
 8c8:	90 40       	sbci	r25, 0x00	; 0
 8ca:	e0 40       	sbci	r30, 0x00	; 0
 8cc:	e1 f7       	brne	.-8      	; 0x8c6 <__DATA_REGION_LENGTH__+0xc6>
 8ce:	00 c0       	rjmp	.+0      	; 0x8d0 <__DATA_REGION_LENGTH__+0xd0>
 8d0:	00 00       	nop
                _delay_ms(1000);
                
                puts("D");
 8d2:	8e e1       	ldi	r24, 0x1E	; 30
 8d4:	91 e0       	ldi	r25, 0x01	; 1
 8d6:	0e 94 f5 04 	call	0x9ea	; 0x9ea <puts>
                input = getchar();
 8da:	80 91 20 01 	lds	r24, 0x0120	; 0x800120 <__data_end>
 8de:	90 91 21 01 	lds	r25, 0x0121	; 0x800121 <__data_end+0x1>
 8e2:	0e 94 a1 04 	call	0x942	; 0x942 <fgetc>
                printf("%c\n", input);
 8e6:	99 27       	eor	r25, r25
 8e8:	9f 93       	push	r25
 8ea:	8f 93       	push	r24
 8ec:	82 e0       	ldi	r24, 0x02	; 2
 8ee:	91 e0       	ldi	r25, 0x01	; 1
 8f0:	9f 93       	push	r25
 8f2:	8f 93       	push	r24
 8f4:	0e 94 df 04 	call	0x9be	; 0x9be <printf>
 8f8:	0f 90       	pop	r0
 8fa:	0f 90       	pop	r0
 8fc:	0f 90       	pop	r0
 8fe:	0f 90       	pop	r0
            }
            
            DDRD ^= 0b11111111;
 900:	8a b1       	in	r24, 0x0a	; 10
 902:	80 95       	com	r24
 904:	8a b9       	out	0x0a, r24	; 10
 906:	89 ef       	ldi	r24, 0xF9	; 249
 908:	90 e0       	ldi	r25, 0x00	; 0
 90a:	01 97       	sbiw	r24, 0x01	; 1
 90c:	f1 f7       	brne	.-4      	; 0x90a <__stack+0xb>
 90e:	00 c0       	rjmp	.+0      	; 0x910 <__stack+0x11>
 910:	00 00       	nop
            _delay_ms(1);
            PORTD ^= 0b11111111;
 912:	8b b1       	in	r24, 0x0b	; 11
 914:	80 95       	com	r24
 916:	8b b9       	out	0x0b, r24	; 11
 918:	e3 ec       	ldi	r30, 0xC3	; 195
 91a:	f9 e0       	ldi	r31, 0x09	; 9
 91c:	31 97       	sbiw	r30, 0x01	; 1
 91e:	f1 f7       	brne	.-4      	; 0x91c <__stack+0x1d>
 920:	00 c0       	rjmp	.+0      	; 0x922 <__stack+0x23>
 922:	00 00       	nop
 924:	02 cc       	rjmp	.-2044   	; 0x12a <main+0x84>

00000926 <USART_transmit>:
	UCSR0C = (1<<USBS0) | (3<<UCSZ00);
}

void USART_transmit(unsigned char data) {
	// Wait for empty transmit buffer
	while(!(UCSR0A & (1<<UDRE0)));
 926:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 92a:	95 ff       	sbrs	r25, 5
 92c:	fc cf       	rjmp	.-8      	; 0x926 <USART_transmit>
    
	// Put data into buffer, send the data
	UDR0 = data;
 92e:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
 932:	08 95       	ret

00000934 <USART_receive>:
}

unsigned char USART_receive(void) {
	// Wait for data to be received
	while(!(UCSR0A & (1<<RXC0)));
 934:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
 938:	88 23       	and	r24, r24
 93a:	e4 f7       	brge	.-8      	; 0x934 <USART_receive>
	
	// Get and return received data from buffer
	return UDR0;
 93c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
 940:	08 95       	ret

00000942 <fgetc>:
 942:	cf 93       	push	r28
 944:	df 93       	push	r29
 946:	ec 01       	movw	r28, r24
 948:	2b 81       	ldd	r18, Y+3	; 0x03
 94a:	20 ff       	sbrs	r18, 0
 94c:	33 c0       	rjmp	.+102    	; 0x9b4 <fgetc+0x72>
 94e:	26 ff       	sbrs	r18, 6
 950:	0a c0       	rjmp	.+20     	; 0x966 <fgetc+0x24>
 952:	2f 7b       	andi	r18, 0xBF	; 191
 954:	2b 83       	std	Y+3, r18	; 0x03
 956:	8e 81       	ldd	r24, Y+6	; 0x06
 958:	9f 81       	ldd	r25, Y+7	; 0x07
 95a:	01 96       	adiw	r24, 0x01	; 1
 95c:	9f 83       	std	Y+7, r25	; 0x07
 95e:	8e 83       	std	Y+6, r24	; 0x06
 960:	8a 81       	ldd	r24, Y+2	; 0x02
 962:	90 e0       	ldi	r25, 0x00	; 0
 964:	29 c0       	rjmp	.+82     	; 0x9b8 <fgetc+0x76>
 966:	22 ff       	sbrs	r18, 2
 968:	0f c0       	rjmp	.+30     	; 0x988 <fgetc+0x46>
 96a:	e8 81       	ld	r30, Y
 96c:	f9 81       	ldd	r31, Y+1	; 0x01
 96e:	80 81       	ld	r24, Z
 970:	08 2e       	mov	r0, r24
 972:	00 0c       	add	r0, r0
 974:	99 0b       	sbc	r25, r25
 976:	00 97       	sbiw	r24, 0x00	; 0
 978:	19 f4       	brne	.+6      	; 0x980 <fgetc+0x3e>
 97a:	20 62       	ori	r18, 0x20	; 32
 97c:	2b 83       	std	Y+3, r18	; 0x03
 97e:	1a c0       	rjmp	.+52     	; 0x9b4 <fgetc+0x72>
 980:	31 96       	adiw	r30, 0x01	; 1
 982:	f9 83       	std	Y+1, r31	; 0x01
 984:	e8 83       	st	Y, r30
 986:	0e c0       	rjmp	.+28     	; 0x9a4 <fgetc+0x62>
 988:	ea 85       	ldd	r30, Y+10	; 0x0a
 98a:	fb 85       	ldd	r31, Y+11	; 0x0b
 98c:	09 95       	icall
 98e:	97 ff       	sbrs	r25, 7
 990:	09 c0       	rjmp	.+18     	; 0x9a4 <fgetc+0x62>
 992:	2b 81       	ldd	r18, Y+3	; 0x03
 994:	01 96       	adiw	r24, 0x01	; 1
 996:	11 f0       	breq	.+4      	; 0x99c <fgetc+0x5a>
 998:	80 e2       	ldi	r24, 0x20	; 32
 99a:	01 c0       	rjmp	.+2      	; 0x99e <fgetc+0x5c>
 99c:	80 e1       	ldi	r24, 0x10	; 16
 99e:	82 2b       	or	r24, r18
 9a0:	8b 83       	std	Y+3, r24	; 0x03
 9a2:	08 c0       	rjmp	.+16     	; 0x9b4 <fgetc+0x72>
 9a4:	2e 81       	ldd	r18, Y+6	; 0x06
 9a6:	3f 81       	ldd	r19, Y+7	; 0x07
 9a8:	2f 5f       	subi	r18, 0xFF	; 255
 9aa:	3f 4f       	sbci	r19, 0xFF	; 255
 9ac:	3f 83       	std	Y+7, r19	; 0x07
 9ae:	2e 83       	std	Y+6, r18	; 0x06
 9b0:	99 27       	eor	r25, r25
 9b2:	02 c0       	rjmp	.+4      	; 0x9b8 <fgetc+0x76>
 9b4:	8f ef       	ldi	r24, 0xFF	; 255
 9b6:	9f ef       	ldi	r25, 0xFF	; 255
 9b8:	df 91       	pop	r29
 9ba:	cf 91       	pop	r28
 9bc:	08 95       	ret

000009be <printf>:
 9be:	a0 e0       	ldi	r26, 0x00	; 0
 9c0:	b0 e0       	ldi	r27, 0x00	; 0
 9c2:	e5 ee       	ldi	r30, 0xE5	; 229
 9c4:	f4 e0       	ldi	r31, 0x04	; 4
 9c6:	0c 94 c6 07 	jmp	0xf8c	; 0xf8c <__prologue_saves__+0x20>
 9ca:	ae 01       	movw	r20, r28
 9cc:	4b 5f       	subi	r20, 0xFB	; 251
 9ce:	5f 4f       	sbci	r21, 0xFF	; 255
 9d0:	fa 01       	movw	r30, r20
 9d2:	61 91       	ld	r22, Z+
 9d4:	71 91       	ld	r23, Z+
 9d6:	af 01       	movw	r20, r30
 9d8:	80 91 22 01 	lds	r24, 0x0122	; 0x800122 <__data_end+0x2>
 9dc:	90 91 23 01 	lds	r25, 0x0123	; 0x800123 <__data_end+0x3>
 9e0:	0e 94 25 05 	call	0xa4a	; 0xa4a <vfprintf>
 9e4:	e2 e0       	ldi	r30, 0x02	; 2
 9e6:	0c 94 e2 07 	jmp	0xfc4	; 0xfc4 <__epilogue_restores__+0x20>

000009ea <puts>:
 9ea:	0f 93       	push	r16
 9ec:	1f 93       	push	r17
 9ee:	cf 93       	push	r28
 9f0:	df 93       	push	r29
 9f2:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <__data_end+0x2>
 9f6:	f0 91 23 01 	lds	r31, 0x0123	; 0x800123 <__data_end+0x3>
 9fa:	23 81       	ldd	r18, Z+3	; 0x03
 9fc:	21 ff       	sbrs	r18, 1
 9fe:	1b c0       	rjmp	.+54     	; 0xa36 <puts+0x4c>
 a00:	8c 01       	movw	r16, r24
 a02:	d0 e0       	ldi	r29, 0x00	; 0
 a04:	c0 e0       	ldi	r28, 0x00	; 0
 a06:	f8 01       	movw	r30, r16
 a08:	81 91       	ld	r24, Z+
 a0a:	8f 01       	movw	r16, r30
 a0c:	60 91 22 01 	lds	r22, 0x0122	; 0x800122 <__data_end+0x2>
 a10:	70 91 23 01 	lds	r23, 0x0123	; 0x800123 <__data_end+0x3>
 a14:	db 01       	movw	r26, r22
 a16:	18 96       	adiw	r26, 0x08	; 8
 a18:	ed 91       	ld	r30, X+
 a1a:	fc 91       	ld	r31, X
 a1c:	19 97       	sbiw	r26, 0x09	; 9
 a1e:	88 23       	and	r24, r24
 a20:	31 f0       	breq	.+12     	; 0xa2e <puts+0x44>
 a22:	09 95       	icall
 a24:	89 2b       	or	r24, r25
 a26:	79 f3       	breq	.-34     	; 0xa06 <puts+0x1c>
 a28:	df ef       	ldi	r29, 0xFF	; 255
 a2a:	cf ef       	ldi	r28, 0xFF	; 255
 a2c:	ec cf       	rjmp	.-40     	; 0xa06 <puts+0x1c>
 a2e:	8a e0       	ldi	r24, 0x0A	; 10
 a30:	09 95       	icall
 a32:	89 2b       	or	r24, r25
 a34:	19 f0       	breq	.+6      	; 0xa3c <puts+0x52>
 a36:	8f ef       	ldi	r24, 0xFF	; 255
 a38:	9f ef       	ldi	r25, 0xFF	; 255
 a3a:	02 c0       	rjmp	.+4      	; 0xa40 <puts+0x56>
 a3c:	8d 2f       	mov	r24, r29
 a3e:	9c 2f       	mov	r25, r28
 a40:	df 91       	pop	r29
 a42:	cf 91       	pop	r28
 a44:	1f 91       	pop	r17
 a46:	0f 91       	pop	r16
 a48:	08 95       	ret

00000a4a <vfprintf>:
 a4a:	ab e0       	ldi	r26, 0x0B	; 11
 a4c:	b0 e0       	ldi	r27, 0x00	; 0
 a4e:	eb e2       	ldi	r30, 0x2B	; 43
 a50:	f5 e0       	ldi	r31, 0x05	; 5
 a52:	0c 94 b6 07 	jmp	0xf6c	; 0xf6c <__prologue_saves__>
 a56:	6c 01       	movw	r12, r24
 a58:	7b 01       	movw	r14, r22
 a5a:	8a 01       	movw	r16, r20
 a5c:	fc 01       	movw	r30, r24
 a5e:	17 82       	std	Z+7, r1	; 0x07
 a60:	16 82       	std	Z+6, r1	; 0x06
 a62:	83 81       	ldd	r24, Z+3	; 0x03
 a64:	81 ff       	sbrs	r24, 1
 a66:	cc c1       	rjmp	.+920    	; 0xe00 <vfprintf+0x3b6>
 a68:	ce 01       	movw	r24, r28
 a6a:	01 96       	adiw	r24, 0x01	; 1
 a6c:	3c 01       	movw	r6, r24
 a6e:	f6 01       	movw	r30, r12
 a70:	93 81       	ldd	r25, Z+3	; 0x03
 a72:	f7 01       	movw	r30, r14
 a74:	93 fd       	sbrc	r25, 3
 a76:	85 91       	lpm	r24, Z+
 a78:	93 ff       	sbrs	r25, 3
 a7a:	81 91       	ld	r24, Z+
 a7c:	7f 01       	movw	r14, r30
 a7e:	88 23       	and	r24, r24
 a80:	09 f4       	brne	.+2      	; 0xa84 <vfprintf+0x3a>
 a82:	ba c1       	rjmp	.+884    	; 0xdf8 <vfprintf+0x3ae>
 a84:	85 32       	cpi	r24, 0x25	; 37
 a86:	39 f4       	brne	.+14     	; 0xa96 <vfprintf+0x4c>
 a88:	93 fd       	sbrc	r25, 3
 a8a:	85 91       	lpm	r24, Z+
 a8c:	93 ff       	sbrs	r25, 3
 a8e:	81 91       	ld	r24, Z+
 a90:	7f 01       	movw	r14, r30
 a92:	85 32       	cpi	r24, 0x25	; 37
 a94:	29 f4       	brne	.+10     	; 0xaa0 <vfprintf+0x56>
 a96:	b6 01       	movw	r22, r12
 a98:	90 e0       	ldi	r25, 0x00	; 0
 a9a:	0e 94 1c 07 	call	0xe38	; 0xe38 <fputc>
 a9e:	e7 cf       	rjmp	.-50     	; 0xa6e <vfprintf+0x24>
 aa0:	91 2c       	mov	r9, r1
 aa2:	21 2c       	mov	r2, r1
 aa4:	31 2c       	mov	r3, r1
 aa6:	ff e1       	ldi	r31, 0x1F	; 31
 aa8:	f3 15       	cp	r31, r3
 aaa:	d8 f0       	brcs	.+54     	; 0xae2 <vfprintf+0x98>
 aac:	8b 32       	cpi	r24, 0x2B	; 43
 aae:	79 f0       	breq	.+30     	; 0xace <vfprintf+0x84>
 ab0:	38 f4       	brcc	.+14     	; 0xac0 <vfprintf+0x76>
 ab2:	80 32       	cpi	r24, 0x20	; 32
 ab4:	79 f0       	breq	.+30     	; 0xad4 <vfprintf+0x8a>
 ab6:	83 32       	cpi	r24, 0x23	; 35
 ab8:	a1 f4       	brne	.+40     	; 0xae2 <vfprintf+0x98>
 aba:	23 2d       	mov	r18, r3
 abc:	20 61       	ori	r18, 0x10	; 16
 abe:	1d c0       	rjmp	.+58     	; 0xafa <vfprintf+0xb0>
 ac0:	8d 32       	cpi	r24, 0x2D	; 45
 ac2:	61 f0       	breq	.+24     	; 0xadc <vfprintf+0x92>
 ac4:	80 33       	cpi	r24, 0x30	; 48
 ac6:	69 f4       	brne	.+26     	; 0xae2 <vfprintf+0x98>
 ac8:	23 2d       	mov	r18, r3
 aca:	21 60       	ori	r18, 0x01	; 1
 acc:	16 c0       	rjmp	.+44     	; 0xafa <vfprintf+0xb0>
 ace:	83 2d       	mov	r24, r3
 ad0:	82 60       	ori	r24, 0x02	; 2
 ad2:	38 2e       	mov	r3, r24
 ad4:	e3 2d       	mov	r30, r3
 ad6:	e4 60       	ori	r30, 0x04	; 4
 ad8:	3e 2e       	mov	r3, r30
 ada:	2a c0       	rjmp	.+84     	; 0xb30 <vfprintf+0xe6>
 adc:	f3 2d       	mov	r31, r3
 ade:	f8 60       	ori	r31, 0x08	; 8
 ae0:	1d c0       	rjmp	.+58     	; 0xb1c <vfprintf+0xd2>
 ae2:	37 fc       	sbrc	r3, 7
 ae4:	2d c0       	rjmp	.+90     	; 0xb40 <vfprintf+0xf6>
 ae6:	20 ed       	ldi	r18, 0xD0	; 208
 ae8:	28 0f       	add	r18, r24
 aea:	2a 30       	cpi	r18, 0x0A	; 10
 aec:	40 f0       	brcs	.+16     	; 0xafe <vfprintf+0xb4>
 aee:	8e 32       	cpi	r24, 0x2E	; 46
 af0:	b9 f4       	brne	.+46     	; 0xb20 <vfprintf+0xd6>
 af2:	36 fc       	sbrc	r3, 6
 af4:	81 c1       	rjmp	.+770    	; 0xdf8 <vfprintf+0x3ae>
 af6:	23 2d       	mov	r18, r3
 af8:	20 64       	ori	r18, 0x40	; 64
 afa:	32 2e       	mov	r3, r18
 afc:	19 c0       	rjmp	.+50     	; 0xb30 <vfprintf+0xe6>
 afe:	36 fe       	sbrs	r3, 6
 b00:	06 c0       	rjmp	.+12     	; 0xb0e <vfprintf+0xc4>
 b02:	8a e0       	ldi	r24, 0x0A	; 10
 b04:	98 9e       	mul	r9, r24
 b06:	20 0d       	add	r18, r0
 b08:	11 24       	eor	r1, r1
 b0a:	92 2e       	mov	r9, r18
 b0c:	11 c0       	rjmp	.+34     	; 0xb30 <vfprintf+0xe6>
 b0e:	ea e0       	ldi	r30, 0x0A	; 10
 b10:	2e 9e       	mul	r2, r30
 b12:	20 0d       	add	r18, r0
 b14:	11 24       	eor	r1, r1
 b16:	22 2e       	mov	r2, r18
 b18:	f3 2d       	mov	r31, r3
 b1a:	f0 62       	ori	r31, 0x20	; 32
 b1c:	3f 2e       	mov	r3, r31
 b1e:	08 c0       	rjmp	.+16     	; 0xb30 <vfprintf+0xe6>
 b20:	8c 36       	cpi	r24, 0x6C	; 108
 b22:	21 f4       	brne	.+8      	; 0xb2c <vfprintf+0xe2>
 b24:	83 2d       	mov	r24, r3
 b26:	80 68       	ori	r24, 0x80	; 128
 b28:	38 2e       	mov	r3, r24
 b2a:	02 c0       	rjmp	.+4      	; 0xb30 <vfprintf+0xe6>
 b2c:	88 36       	cpi	r24, 0x68	; 104
 b2e:	41 f4       	brne	.+16     	; 0xb40 <vfprintf+0xf6>
 b30:	f7 01       	movw	r30, r14
 b32:	93 fd       	sbrc	r25, 3
 b34:	85 91       	lpm	r24, Z+
 b36:	93 ff       	sbrs	r25, 3
 b38:	81 91       	ld	r24, Z+
 b3a:	7f 01       	movw	r14, r30
 b3c:	81 11       	cpse	r24, r1
 b3e:	b3 cf       	rjmp	.-154    	; 0xaa6 <vfprintf+0x5c>
 b40:	98 2f       	mov	r25, r24
 b42:	9f 7d       	andi	r25, 0xDF	; 223
 b44:	95 54       	subi	r25, 0x45	; 69
 b46:	93 30       	cpi	r25, 0x03	; 3
 b48:	28 f4       	brcc	.+10     	; 0xb54 <vfprintf+0x10a>
 b4a:	0c 5f       	subi	r16, 0xFC	; 252
 b4c:	1f 4f       	sbci	r17, 0xFF	; 255
 b4e:	9f e3       	ldi	r25, 0x3F	; 63
 b50:	99 83       	std	Y+1, r25	; 0x01
 b52:	0d c0       	rjmp	.+26     	; 0xb6e <vfprintf+0x124>
 b54:	83 36       	cpi	r24, 0x63	; 99
 b56:	31 f0       	breq	.+12     	; 0xb64 <vfprintf+0x11a>
 b58:	83 37       	cpi	r24, 0x73	; 115
 b5a:	71 f0       	breq	.+28     	; 0xb78 <vfprintf+0x12e>
 b5c:	83 35       	cpi	r24, 0x53	; 83
 b5e:	09 f0       	breq	.+2      	; 0xb62 <vfprintf+0x118>
 b60:	59 c0       	rjmp	.+178    	; 0xc14 <vfprintf+0x1ca>
 b62:	21 c0       	rjmp	.+66     	; 0xba6 <vfprintf+0x15c>
 b64:	f8 01       	movw	r30, r16
 b66:	80 81       	ld	r24, Z
 b68:	89 83       	std	Y+1, r24	; 0x01
 b6a:	0e 5f       	subi	r16, 0xFE	; 254
 b6c:	1f 4f       	sbci	r17, 0xFF	; 255
 b6e:	88 24       	eor	r8, r8
 b70:	83 94       	inc	r8
 b72:	91 2c       	mov	r9, r1
 b74:	53 01       	movw	r10, r6
 b76:	13 c0       	rjmp	.+38     	; 0xb9e <vfprintf+0x154>
 b78:	28 01       	movw	r4, r16
 b7a:	f2 e0       	ldi	r31, 0x02	; 2
 b7c:	4f 0e       	add	r4, r31
 b7e:	51 1c       	adc	r5, r1
 b80:	f8 01       	movw	r30, r16
 b82:	a0 80       	ld	r10, Z
 b84:	b1 80       	ldd	r11, Z+1	; 0x01
 b86:	36 fe       	sbrs	r3, 6
 b88:	03 c0       	rjmp	.+6      	; 0xb90 <vfprintf+0x146>
 b8a:	69 2d       	mov	r22, r9
 b8c:	70 e0       	ldi	r23, 0x00	; 0
 b8e:	02 c0       	rjmp	.+4      	; 0xb94 <vfprintf+0x14a>
 b90:	6f ef       	ldi	r22, 0xFF	; 255
 b92:	7f ef       	ldi	r23, 0xFF	; 255
 b94:	c5 01       	movw	r24, r10
 b96:	0e 94 11 07 	call	0xe22	; 0xe22 <strnlen>
 b9a:	4c 01       	movw	r8, r24
 b9c:	82 01       	movw	r16, r4
 b9e:	f3 2d       	mov	r31, r3
 ba0:	ff 77       	andi	r31, 0x7F	; 127
 ba2:	3f 2e       	mov	r3, r31
 ba4:	16 c0       	rjmp	.+44     	; 0xbd2 <vfprintf+0x188>
 ba6:	28 01       	movw	r4, r16
 ba8:	22 e0       	ldi	r18, 0x02	; 2
 baa:	42 0e       	add	r4, r18
 bac:	51 1c       	adc	r5, r1
 bae:	f8 01       	movw	r30, r16
 bb0:	a0 80       	ld	r10, Z
 bb2:	b1 80       	ldd	r11, Z+1	; 0x01
 bb4:	36 fe       	sbrs	r3, 6
 bb6:	03 c0       	rjmp	.+6      	; 0xbbe <vfprintf+0x174>
 bb8:	69 2d       	mov	r22, r9
 bba:	70 e0       	ldi	r23, 0x00	; 0
 bbc:	02 c0       	rjmp	.+4      	; 0xbc2 <vfprintf+0x178>
 bbe:	6f ef       	ldi	r22, 0xFF	; 255
 bc0:	7f ef       	ldi	r23, 0xFF	; 255
 bc2:	c5 01       	movw	r24, r10
 bc4:	0e 94 06 07 	call	0xe0c	; 0xe0c <strnlen_P>
 bc8:	4c 01       	movw	r8, r24
 bca:	f3 2d       	mov	r31, r3
 bcc:	f0 68       	ori	r31, 0x80	; 128
 bce:	3f 2e       	mov	r3, r31
 bd0:	82 01       	movw	r16, r4
 bd2:	33 fc       	sbrc	r3, 3
 bd4:	1b c0       	rjmp	.+54     	; 0xc0c <vfprintf+0x1c2>
 bd6:	82 2d       	mov	r24, r2
 bd8:	90 e0       	ldi	r25, 0x00	; 0
 bda:	88 16       	cp	r8, r24
 bdc:	99 06       	cpc	r9, r25
 bde:	b0 f4       	brcc	.+44     	; 0xc0c <vfprintf+0x1c2>
 be0:	b6 01       	movw	r22, r12
 be2:	80 e2       	ldi	r24, 0x20	; 32
 be4:	90 e0       	ldi	r25, 0x00	; 0
 be6:	0e 94 1c 07 	call	0xe38	; 0xe38 <fputc>
 bea:	2a 94       	dec	r2
 bec:	f4 cf       	rjmp	.-24     	; 0xbd6 <vfprintf+0x18c>
 bee:	f5 01       	movw	r30, r10
 bf0:	37 fc       	sbrc	r3, 7
 bf2:	85 91       	lpm	r24, Z+
 bf4:	37 fe       	sbrs	r3, 7
 bf6:	81 91       	ld	r24, Z+
 bf8:	5f 01       	movw	r10, r30
 bfa:	b6 01       	movw	r22, r12
 bfc:	90 e0       	ldi	r25, 0x00	; 0
 bfe:	0e 94 1c 07 	call	0xe38	; 0xe38 <fputc>
 c02:	21 10       	cpse	r2, r1
 c04:	2a 94       	dec	r2
 c06:	21 e0       	ldi	r18, 0x01	; 1
 c08:	82 1a       	sub	r8, r18
 c0a:	91 08       	sbc	r9, r1
 c0c:	81 14       	cp	r8, r1
 c0e:	91 04       	cpc	r9, r1
 c10:	71 f7       	brne	.-36     	; 0xbee <vfprintf+0x1a4>
 c12:	e8 c0       	rjmp	.+464    	; 0xde4 <vfprintf+0x39a>
 c14:	84 36       	cpi	r24, 0x64	; 100
 c16:	11 f0       	breq	.+4      	; 0xc1c <vfprintf+0x1d2>
 c18:	89 36       	cpi	r24, 0x69	; 105
 c1a:	41 f5       	brne	.+80     	; 0xc6c <vfprintf+0x222>
 c1c:	f8 01       	movw	r30, r16
 c1e:	37 fe       	sbrs	r3, 7
 c20:	07 c0       	rjmp	.+14     	; 0xc30 <vfprintf+0x1e6>
 c22:	60 81       	ld	r22, Z
 c24:	71 81       	ldd	r23, Z+1	; 0x01
 c26:	82 81       	ldd	r24, Z+2	; 0x02
 c28:	93 81       	ldd	r25, Z+3	; 0x03
 c2a:	0c 5f       	subi	r16, 0xFC	; 252
 c2c:	1f 4f       	sbci	r17, 0xFF	; 255
 c2e:	08 c0       	rjmp	.+16     	; 0xc40 <vfprintf+0x1f6>
 c30:	60 81       	ld	r22, Z
 c32:	71 81       	ldd	r23, Z+1	; 0x01
 c34:	07 2e       	mov	r0, r23
 c36:	00 0c       	add	r0, r0
 c38:	88 0b       	sbc	r24, r24
 c3a:	99 0b       	sbc	r25, r25
 c3c:	0e 5f       	subi	r16, 0xFE	; 254
 c3e:	1f 4f       	sbci	r17, 0xFF	; 255
 c40:	f3 2d       	mov	r31, r3
 c42:	ff 76       	andi	r31, 0x6F	; 111
 c44:	3f 2e       	mov	r3, r31
 c46:	97 ff       	sbrs	r25, 7
 c48:	09 c0       	rjmp	.+18     	; 0xc5c <vfprintf+0x212>
 c4a:	90 95       	com	r25
 c4c:	80 95       	com	r24
 c4e:	70 95       	com	r23
 c50:	61 95       	neg	r22
 c52:	7f 4f       	sbci	r23, 0xFF	; 255
 c54:	8f 4f       	sbci	r24, 0xFF	; 255
 c56:	9f 4f       	sbci	r25, 0xFF	; 255
 c58:	f0 68       	ori	r31, 0x80	; 128
 c5a:	3f 2e       	mov	r3, r31
 c5c:	2a e0       	ldi	r18, 0x0A	; 10
 c5e:	30 e0       	ldi	r19, 0x00	; 0
 c60:	a3 01       	movw	r20, r6
 c62:	0e 94 58 07 	call	0xeb0	; 0xeb0 <__ultoa_invert>
 c66:	88 2e       	mov	r8, r24
 c68:	86 18       	sub	r8, r6
 c6a:	45 c0       	rjmp	.+138    	; 0xcf6 <vfprintf+0x2ac>
 c6c:	85 37       	cpi	r24, 0x75	; 117
 c6e:	31 f4       	brne	.+12     	; 0xc7c <vfprintf+0x232>
 c70:	23 2d       	mov	r18, r3
 c72:	2f 7e       	andi	r18, 0xEF	; 239
 c74:	b2 2e       	mov	r11, r18
 c76:	2a e0       	ldi	r18, 0x0A	; 10
 c78:	30 e0       	ldi	r19, 0x00	; 0
 c7a:	25 c0       	rjmp	.+74     	; 0xcc6 <vfprintf+0x27c>
 c7c:	93 2d       	mov	r25, r3
 c7e:	99 7f       	andi	r25, 0xF9	; 249
 c80:	b9 2e       	mov	r11, r25
 c82:	8f 36       	cpi	r24, 0x6F	; 111
 c84:	c1 f0       	breq	.+48     	; 0xcb6 <vfprintf+0x26c>
 c86:	18 f4       	brcc	.+6      	; 0xc8e <vfprintf+0x244>
 c88:	88 35       	cpi	r24, 0x58	; 88
 c8a:	79 f0       	breq	.+30     	; 0xcaa <vfprintf+0x260>
 c8c:	b5 c0       	rjmp	.+362    	; 0xdf8 <vfprintf+0x3ae>
 c8e:	80 37       	cpi	r24, 0x70	; 112
 c90:	19 f0       	breq	.+6      	; 0xc98 <vfprintf+0x24e>
 c92:	88 37       	cpi	r24, 0x78	; 120
 c94:	21 f0       	breq	.+8      	; 0xc9e <vfprintf+0x254>
 c96:	b0 c0       	rjmp	.+352    	; 0xdf8 <vfprintf+0x3ae>
 c98:	e9 2f       	mov	r30, r25
 c9a:	e0 61       	ori	r30, 0x10	; 16
 c9c:	be 2e       	mov	r11, r30
 c9e:	b4 fe       	sbrs	r11, 4
 ca0:	0d c0       	rjmp	.+26     	; 0xcbc <vfprintf+0x272>
 ca2:	fb 2d       	mov	r31, r11
 ca4:	f4 60       	ori	r31, 0x04	; 4
 ca6:	bf 2e       	mov	r11, r31
 ca8:	09 c0       	rjmp	.+18     	; 0xcbc <vfprintf+0x272>
 caa:	34 fe       	sbrs	r3, 4
 cac:	0a c0       	rjmp	.+20     	; 0xcc2 <vfprintf+0x278>
 cae:	29 2f       	mov	r18, r25
 cb0:	26 60       	ori	r18, 0x06	; 6
 cb2:	b2 2e       	mov	r11, r18
 cb4:	06 c0       	rjmp	.+12     	; 0xcc2 <vfprintf+0x278>
 cb6:	28 e0       	ldi	r18, 0x08	; 8
 cb8:	30 e0       	ldi	r19, 0x00	; 0
 cba:	05 c0       	rjmp	.+10     	; 0xcc6 <vfprintf+0x27c>
 cbc:	20 e1       	ldi	r18, 0x10	; 16
 cbe:	30 e0       	ldi	r19, 0x00	; 0
 cc0:	02 c0       	rjmp	.+4      	; 0xcc6 <vfprintf+0x27c>
 cc2:	20 e1       	ldi	r18, 0x10	; 16
 cc4:	32 e0       	ldi	r19, 0x02	; 2
 cc6:	f8 01       	movw	r30, r16
 cc8:	b7 fe       	sbrs	r11, 7
 cca:	07 c0       	rjmp	.+14     	; 0xcda <vfprintf+0x290>
 ccc:	60 81       	ld	r22, Z
 cce:	71 81       	ldd	r23, Z+1	; 0x01
 cd0:	82 81       	ldd	r24, Z+2	; 0x02
 cd2:	93 81       	ldd	r25, Z+3	; 0x03
 cd4:	0c 5f       	subi	r16, 0xFC	; 252
 cd6:	1f 4f       	sbci	r17, 0xFF	; 255
 cd8:	06 c0       	rjmp	.+12     	; 0xce6 <vfprintf+0x29c>
 cda:	60 81       	ld	r22, Z
 cdc:	71 81       	ldd	r23, Z+1	; 0x01
 cde:	80 e0       	ldi	r24, 0x00	; 0
 ce0:	90 e0       	ldi	r25, 0x00	; 0
 ce2:	0e 5f       	subi	r16, 0xFE	; 254
 ce4:	1f 4f       	sbci	r17, 0xFF	; 255
 ce6:	a3 01       	movw	r20, r6
 ce8:	0e 94 58 07 	call	0xeb0	; 0xeb0 <__ultoa_invert>
 cec:	88 2e       	mov	r8, r24
 cee:	86 18       	sub	r8, r6
 cf0:	fb 2d       	mov	r31, r11
 cf2:	ff 77       	andi	r31, 0x7F	; 127
 cf4:	3f 2e       	mov	r3, r31
 cf6:	36 fe       	sbrs	r3, 6
 cf8:	0d c0       	rjmp	.+26     	; 0xd14 <vfprintf+0x2ca>
 cfa:	23 2d       	mov	r18, r3
 cfc:	2e 7f       	andi	r18, 0xFE	; 254
 cfe:	a2 2e       	mov	r10, r18
 d00:	89 14       	cp	r8, r9
 d02:	58 f4       	brcc	.+22     	; 0xd1a <vfprintf+0x2d0>
 d04:	34 fe       	sbrs	r3, 4
 d06:	0b c0       	rjmp	.+22     	; 0xd1e <vfprintf+0x2d4>
 d08:	32 fc       	sbrc	r3, 2
 d0a:	09 c0       	rjmp	.+18     	; 0xd1e <vfprintf+0x2d4>
 d0c:	83 2d       	mov	r24, r3
 d0e:	8e 7e       	andi	r24, 0xEE	; 238
 d10:	a8 2e       	mov	r10, r24
 d12:	05 c0       	rjmp	.+10     	; 0xd1e <vfprintf+0x2d4>
 d14:	b8 2c       	mov	r11, r8
 d16:	a3 2c       	mov	r10, r3
 d18:	03 c0       	rjmp	.+6      	; 0xd20 <vfprintf+0x2d6>
 d1a:	b8 2c       	mov	r11, r8
 d1c:	01 c0       	rjmp	.+2      	; 0xd20 <vfprintf+0x2d6>
 d1e:	b9 2c       	mov	r11, r9
 d20:	a4 fe       	sbrs	r10, 4
 d22:	0f c0       	rjmp	.+30     	; 0xd42 <vfprintf+0x2f8>
 d24:	fe 01       	movw	r30, r28
 d26:	e8 0d       	add	r30, r8
 d28:	f1 1d       	adc	r31, r1
 d2a:	80 81       	ld	r24, Z
 d2c:	80 33       	cpi	r24, 0x30	; 48
 d2e:	21 f4       	brne	.+8      	; 0xd38 <vfprintf+0x2ee>
 d30:	9a 2d       	mov	r25, r10
 d32:	99 7e       	andi	r25, 0xE9	; 233
 d34:	a9 2e       	mov	r10, r25
 d36:	09 c0       	rjmp	.+18     	; 0xd4a <vfprintf+0x300>
 d38:	a2 fe       	sbrs	r10, 2
 d3a:	06 c0       	rjmp	.+12     	; 0xd48 <vfprintf+0x2fe>
 d3c:	b3 94       	inc	r11
 d3e:	b3 94       	inc	r11
 d40:	04 c0       	rjmp	.+8      	; 0xd4a <vfprintf+0x300>
 d42:	8a 2d       	mov	r24, r10
 d44:	86 78       	andi	r24, 0x86	; 134
 d46:	09 f0       	breq	.+2      	; 0xd4a <vfprintf+0x300>
 d48:	b3 94       	inc	r11
 d4a:	a3 fc       	sbrc	r10, 3
 d4c:	11 c0       	rjmp	.+34     	; 0xd70 <vfprintf+0x326>
 d4e:	a0 fe       	sbrs	r10, 0
 d50:	06 c0       	rjmp	.+12     	; 0xd5e <vfprintf+0x314>
 d52:	b2 14       	cp	r11, r2
 d54:	88 f4       	brcc	.+34     	; 0xd78 <vfprintf+0x32e>
 d56:	28 0c       	add	r2, r8
 d58:	92 2c       	mov	r9, r2
 d5a:	9b 18       	sub	r9, r11
 d5c:	0e c0       	rjmp	.+28     	; 0xd7a <vfprintf+0x330>
 d5e:	b2 14       	cp	r11, r2
 d60:	60 f4       	brcc	.+24     	; 0xd7a <vfprintf+0x330>
 d62:	b6 01       	movw	r22, r12
 d64:	80 e2       	ldi	r24, 0x20	; 32
 d66:	90 e0       	ldi	r25, 0x00	; 0
 d68:	0e 94 1c 07 	call	0xe38	; 0xe38 <fputc>
 d6c:	b3 94       	inc	r11
 d6e:	f7 cf       	rjmp	.-18     	; 0xd5e <vfprintf+0x314>
 d70:	b2 14       	cp	r11, r2
 d72:	18 f4       	brcc	.+6      	; 0xd7a <vfprintf+0x330>
 d74:	2b 18       	sub	r2, r11
 d76:	02 c0       	rjmp	.+4      	; 0xd7c <vfprintf+0x332>
 d78:	98 2c       	mov	r9, r8
 d7a:	21 2c       	mov	r2, r1
 d7c:	a4 fe       	sbrs	r10, 4
 d7e:	10 c0       	rjmp	.+32     	; 0xda0 <vfprintf+0x356>
 d80:	b6 01       	movw	r22, r12
 d82:	80 e3       	ldi	r24, 0x30	; 48
 d84:	90 e0       	ldi	r25, 0x00	; 0
 d86:	0e 94 1c 07 	call	0xe38	; 0xe38 <fputc>
 d8a:	a2 fe       	sbrs	r10, 2
 d8c:	17 c0       	rjmp	.+46     	; 0xdbc <vfprintf+0x372>
 d8e:	a1 fc       	sbrc	r10, 1
 d90:	03 c0       	rjmp	.+6      	; 0xd98 <vfprintf+0x34e>
 d92:	88 e7       	ldi	r24, 0x78	; 120
 d94:	90 e0       	ldi	r25, 0x00	; 0
 d96:	02 c0       	rjmp	.+4      	; 0xd9c <vfprintf+0x352>
 d98:	88 e5       	ldi	r24, 0x58	; 88
 d9a:	90 e0       	ldi	r25, 0x00	; 0
 d9c:	b6 01       	movw	r22, r12
 d9e:	0c c0       	rjmp	.+24     	; 0xdb8 <vfprintf+0x36e>
 da0:	8a 2d       	mov	r24, r10
 da2:	86 78       	andi	r24, 0x86	; 134
 da4:	59 f0       	breq	.+22     	; 0xdbc <vfprintf+0x372>
 da6:	a1 fe       	sbrs	r10, 1
 da8:	02 c0       	rjmp	.+4      	; 0xdae <vfprintf+0x364>
 daa:	8b e2       	ldi	r24, 0x2B	; 43
 dac:	01 c0       	rjmp	.+2      	; 0xdb0 <vfprintf+0x366>
 dae:	80 e2       	ldi	r24, 0x20	; 32
 db0:	a7 fc       	sbrc	r10, 7
 db2:	8d e2       	ldi	r24, 0x2D	; 45
 db4:	b6 01       	movw	r22, r12
 db6:	90 e0       	ldi	r25, 0x00	; 0
 db8:	0e 94 1c 07 	call	0xe38	; 0xe38 <fputc>
 dbc:	89 14       	cp	r8, r9
 dbe:	38 f4       	brcc	.+14     	; 0xdce <vfprintf+0x384>
 dc0:	b6 01       	movw	r22, r12
 dc2:	80 e3       	ldi	r24, 0x30	; 48
 dc4:	90 e0       	ldi	r25, 0x00	; 0
 dc6:	0e 94 1c 07 	call	0xe38	; 0xe38 <fputc>
 dca:	9a 94       	dec	r9
 dcc:	f7 cf       	rjmp	.-18     	; 0xdbc <vfprintf+0x372>
 dce:	8a 94       	dec	r8
 dd0:	f3 01       	movw	r30, r6
 dd2:	e8 0d       	add	r30, r8
 dd4:	f1 1d       	adc	r31, r1
 dd6:	80 81       	ld	r24, Z
 dd8:	b6 01       	movw	r22, r12
 dda:	90 e0       	ldi	r25, 0x00	; 0
 ddc:	0e 94 1c 07 	call	0xe38	; 0xe38 <fputc>
 de0:	81 10       	cpse	r8, r1
 de2:	f5 cf       	rjmp	.-22     	; 0xdce <vfprintf+0x384>
 de4:	22 20       	and	r2, r2
 de6:	09 f4       	brne	.+2      	; 0xdea <vfprintf+0x3a0>
 de8:	42 ce       	rjmp	.-892    	; 0xa6e <vfprintf+0x24>
 dea:	b6 01       	movw	r22, r12
 dec:	80 e2       	ldi	r24, 0x20	; 32
 dee:	90 e0       	ldi	r25, 0x00	; 0
 df0:	0e 94 1c 07 	call	0xe38	; 0xe38 <fputc>
 df4:	2a 94       	dec	r2
 df6:	f6 cf       	rjmp	.-20     	; 0xde4 <vfprintf+0x39a>
 df8:	f6 01       	movw	r30, r12
 dfa:	86 81       	ldd	r24, Z+6	; 0x06
 dfc:	97 81       	ldd	r25, Z+7	; 0x07
 dfe:	02 c0       	rjmp	.+4      	; 0xe04 <vfprintf+0x3ba>
 e00:	8f ef       	ldi	r24, 0xFF	; 255
 e02:	9f ef       	ldi	r25, 0xFF	; 255
 e04:	2b 96       	adiw	r28, 0x0b	; 11
 e06:	e2 e1       	ldi	r30, 0x12	; 18
 e08:	0c 94 d2 07 	jmp	0xfa4	; 0xfa4 <__epilogue_restores__>

00000e0c <strnlen_P>:
 e0c:	fc 01       	movw	r30, r24
 e0e:	05 90       	lpm	r0, Z+
 e10:	61 50       	subi	r22, 0x01	; 1
 e12:	70 40       	sbci	r23, 0x00	; 0
 e14:	01 10       	cpse	r0, r1
 e16:	d8 f7       	brcc	.-10     	; 0xe0e <strnlen_P+0x2>
 e18:	80 95       	com	r24
 e1a:	90 95       	com	r25
 e1c:	8e 0f       	add	r24, r30
 e1e:	9f 1f       	adc	r25, r31
 e20:	08 95       	ret

00000e22 <strnlen>:
 e22:	fc 01       	movw	r30, r24
 e24:	61 50       	subi	r22, 0x01	; 1
 e26:	70 40       	sbci	r23, 0x00	; 0
 e28:	01 90       	ld	r0, Z+
 e2a:	01 10       	cpse	r0, r1
 e2c:	d8 f7       	brcc	.-10     	; 0xe24 <strnlen+0x2>
 e2e:	80 95       	com	r24
 e30:	90 95       	com	r25
 e32:	8e 0f       	add	r24, r30
 e34:	9f 1f       	adc	r25, r31
 e36:	08 95       	ret

00000e38 <fputc>:
 e38:	0f 93       	push	r16
 e3a:	1f 93       	push	r17
 e3c:	cf 93       	push	r28
 e3e:	df 93       	push	r29
 e40:	fb 01       	movw	r30, r22
 e42:	23 81       	ldd	r18, Z+3	; 0x03
 e44:	21 fd       	sbrc	r18, 1
 e46:	03 c0       	rjmp	.+6      	; 0xe4e <fputc+0x16>
 e48:	8f ef       	ldi	r24, 0xFF	; 255
 e4a:	9f ef       	ldi	r25, 0xFF	; 255
 e4c:	2c c0       	rjmp	.+88     	; 0xea6 <fputc+0x6e>
 e4e:	22 ff       	sbrs	r18, 2
 e50:	16 c0       	rjmp	.+44     	; 0xe7e <fputc+0x46>
 e52:	46 81       	ldd	r20, Z+6	; 0x06
 e54:	57 81       	ldd	r21, Z+7	; 0x07
 e56:	24 81       	ldd	r18, Z+4	; 0x04
 e58:	35 81       	ldd	r19, Z+5	; 0x05
 e5a:	42 17       	cp	r20, r18
 e5c:	53 07       	cpc	r21, r19
 e5e:	44 f4       	brge	.+16     	; 0xe70 <fputc+0x38>
 e60:	a0 81       	ld	r26, Z
 e62:	b1 81       	ldd	r27, Z+1	; 0x01
 e64:	9d 01       	movw	r18, r26
 e66:	2f 5f       	subi	r18, 0xFF	; 255
 e68:	3f 4f       	sbci	r19, 0xFF	; 255
 e6a:	31 83       	std	Z+1, r19	; 0x01
 e6c:	20 83       	st	Z, r18
 e6e:	8c 93       	st	X, r24
 e70:	26 81       	ldd	r18, Z+6	; 0x06
 e72:	37 81       	ldd	r19, Z+7	; 0x07
 e74:	2f 5f       	subi	r18, 0xFF	; 255
 e76:	3f 4f       	sbci	r19, 0xFF	; 255
 e78:	37 83       	std	Z+7, r19	; 0x07
 e7a:	26 83       	std	Z+6, r18	; 0x06
 e7c:	14 c0       	rjmp	.+40     	; 0xea6 <fputc+0x6e>
 e7e:	8b 01       	movw	r16, r22
 e80:	ec 01       	movw	r28, r24
 e82:	fb 01       	movw	r30, r22
 e84:	00 84       	ldd	r0, Z+8	; 0x08
 e86:	f1 85       	ldd	r31, Z+9	; 0x09
 e88:	e0 2d       	mov	r30, r0
 e8a:	09 95       	icall
 e8c:	89 2b       	or	r24, r25
 e8e:	e1 f6       	brne	.-72     	; 0xe48 <fputc+0x10>
 e90:	d8 01       	movw	r26, r16
 e92:	16 96       	adiw	r26, 0x06	; 6
 e94:	8d 91       	ld	r24, X+
 e96:	9c 91       	ld	r25, X
 e98:	17 97       	sbiw	r26, 0x07	; 7
 e9a:	01 96       	adiw	r24, 0x01	; 1
 e9c:	17 96       	adiw	r26, 0x07	; 7
 e9e:	9c 93       	st	X, r25
 ea0:	8e 93       	st	-X, r24
 ea2:	16 97       	sbiw	r26, 0x06	; 6
 ea4:	ce 01       	movw	r24, r28
 ea6:	df 91       	pop	r29
 ea8:	cf 91       	pop	r28
 eaa:	1f 91       	pop	r17
 eac:	0f 91       	pop	r16
 eae:	08 95       	ret

00000eb0 <__ultoa_invert>:
 eb0:	fa 01       	movw	r30, r20
 eb2:	aa 27       	eor	r26, r26
 eb4:	28 30       	cpi	r18, 0x08	; 8
 eb6:	51 f1       	breq	.+84     	; 0xf0c <__ultoa_invert+0x5c>
 eb8:	20 31       	cpi	r18, 0x10	; 16
 eba:	81 f1       	breq	.+96     	; 0xf1c <__ultoa_invert+0x6c>
 ebc:	e8 94       	clt
 ebe:	6f 93       	push	r22
 ec0:	6e 7f       	andi	r22, 0xFE	; 254
 ec2:	6e 5f       	subi	r22, 0xFE	; 254
 ec4:	7f 4f       	sbci	r23, 0xFF	; 255
 ec6:	8f 4f       	sbci	r24, 0xFF	; 255
 ec8:	9f 4f       	sbci	r25, 0xFF	; 255
 eca:	af 4f       	sbci	r26, 0xFF	; 255
 ecc:	b1 e0       	ldi	r27, 0x01	; 1
 ece:	3e d0       	rcall	.+124    	; 0xf4c <__ultoa_invert+0x9c>
 ed0:	b4 e0       	ldi	r27, 0x04	; 4
 ed2:	3c d0       	rcall	.+120    	; 0xf4c <__ultoa_invert+0x9c>
 ed4:	67 0f       	add	r22, r23
 ed6:	78 1f       	adc	r23, r24
 ed8:	89 1f       	adc	r24, r25
 eda:	9a 1f       	adc	r25, r26
 edc:	a1 1d       	adc	r26, r1
 ede:	68 0f       	add	r22, r24
 ee0:	79 1f       	adc	r23, r25
 ee2:	8a 1f       	adc	r24, r26
 ee4:	91 1d       	adc	r25, r1
 ee6:	a1 1d       	adc	r26, r1
 ee8:	6a 0f       	add	r22, r26
 eea:	71 1d       	adc	r23, r1
 eec:	81 1d       	adc	r24, r1
 eee:	91 1d       	adc	r25, r1
 ef0:	a1 1d       	adc	r26, r1
 ef2:	20 d0       	rcall	.+64     	; 0xf34 <__ultoa_invert+0x84>
 ef4:	09 f4       	brne	.+2      	; 0xef8 <__ultoa_invert+0x48>
 ef6:	68 94       	set
 ef8:	3f 91       	pop	r19
 efa:	2a e0       	ldi	r18, 0x0A	; 10
 efc:	26 9f       	mul	r18, r22
 efe:	11 24       	eor	r1, r1
 f00:	30 19       	sub	r19, r0
 f02:	30 5d       	subi	r19, 0xD0	; 208
 f04:	31 93       	st	Z+, r19
 f06:	de f6       	brtc	.-74     	; 0xebe <__ultoa_invert+0xe>
 f08:	cf 01       	movw	r24, r30
 f0a:	08 95       	ret
 f0c:	46 2f       	mov	r20, r22
 f0e:	47 70       	andi	r20, 0x07	; 7
 f10:	40 5d       	subi	r20, 0xD0	; 208
 f12:	41 93       	st	Z+, r20
 f14:	b3 e0       	ldi	r27, 0x03	; 3
 f16:	0f d0       	rcall	.+30     	; 0xf36 <__ultoa_invert+0x86>
 f18:	c9 f7       	brne	.-14     	; 0xf0c <__ultoa_invert+0x5c>
 f1a:	f6 cf       	rjmp	.-20     	; 0xf08 <__ultoa_invert+0x58>
 f1c:	46 2f       	mov	r20, r22
 f1e:	4f 70       	andi	r20, 0x0F	; 15
 f20:	40 5d       	subi	r20, 0xD0	; 208
 f22:	4a 33       	cpi	r20, 0x3A	; 58
 f24:	18 f0       	brcs	.+6      	; 0xf2c <__ultoa_invert+0x7c>
 f26:	49 5d       	subi	r20, 0xD9	; 217
 f28:	31 fd       	sbrc	r19, 1
 f2a:	40 52       	subi	r20, 0x20	; 32
 f2c:	41 93       	st	Z+, r20
 f2e:	02 d0       	rcall	.+4      	; 0xf34 <__ultoa_invert+0x84>
 f30:	a9 f7       	brne	.-22     	; 0xf1c <__ultoa_invert+0x6c>
 f32:	ea cf       	rjmp	.-44     	; 0xf08 <__ultoa_invert+0x58>
 f34:	b4 e0       	ldi	r27, 0x04	; 4
 f36:	a6 95       	lsr	r26
 f38:	97 95       	ror	r25
 f3a:	87 95       	ror	r24
 f3c:	77 95       	ror	r23
 f3e:	67 95       	ror	r22
 f40:	ba 95       	dec	r27
 f42:	c9 f7       	brne	.-14     	; 0xf36 <__ultoa_invert+0x86>
 f44:	00 97       	sbiw	r24, 0x00	; 0
 f46:	61 05       	cpc	r22, r1
 f48:	71 05       	cpc	r23, r1
 f4a:	08 95       	ret
 f4c:	9b 01       	movw	r18, r22
 f4e:	ac 01       	movw	r20, r24
 f50:	0a 2e       	mov	r0, r26
 f52:	06 94       	lsr	r0
 f54:	57 95       	ror	r21
 f56:	47 95       	ror	r20
 f58:	37 95       	ror	r19
 f5a:	27 95       	ror	r18
 f5c:	ba 95       	dec	r27
 f5e:	c9 f7       	brne	.-14     	; 0xf52 <__ultoa_invert+0xa2>
 f60:	62 0f       	add	r22, r18
 f62:	73 1f       	adc	r23, r19
 f64:	84 1f       	adc	r24, r20
 f66:	95 1f       	adc	r25, r21
 f68:	a0 1d       	adc	r26, r0
 f6a:	08 95       	ret

00000f6c <__prologue_saves__>:
 f6c:	2f 92       	push	r2
 f6e:	3f 92       	push	r3
 f70:	4f 92       	push	r4
 f72:	5f 92       	push	r5
 f74:	6f 92       	push	r6
 f76:	7f 92       	push	r7
 f78:	8f 92       	push	r8
 f7a:	9f 92       	push	r9
 f7c:	af 92       	push	r10
 f7e:	bf 92       	push	r11
 f80:	cf 92       	push	r12
 f82:	df 92       	push	r13
 f84:	ef 92       	push	r14
 f86:	ff 92       	push	r15
 f88:	0f 93       	push	r16
 f8a:	1f 93       	push	r17
 f8c:	cf 93       	push	r28
 f8e:	df 93       	push	r29
 f90:	cd b7       	in	r28, 0x3d	; 61
 f92:	de b7       	in	r29, 0x3e	; 62
 f94:	ca 1b       	sub	r28, r26
 f96:	db 0b       	sbc	r29, r27
 f98:	0f b6       	in	r0, 0x3f	; 63
 f9a:	f8 94       	cli
 f9c:	de bf       	out	0x3e, r29	; 62
 f9e:	0f be       	out	0x3f, r0	; 63
 fa0:	cd bf       	out	0x3d, r28	; 61
 fa2:	09 94       	ijmp

00000fa4 <__epilogue_restores__>:
 fa4:	2a 88       	ldd	r2, Y+18	; 0x12
 fa6:	39 88       	ldd	r3, Y+17	; 0x11
 fa8:	48 88       	ldd	r4, Y+16	; 0x10
 faa:	5f 84       	ldd	r5, Y+15	; 0x0f
 fac:	6e 84       	ldd	r6, Y+14	; 0x0e
 fae:	7d 84       	ldd	r7, Y+13	; 0x0d
 fb0:	8c 84       	ldd	r8, Y+12	; 0x0c
 fb2:	9b 84       	ldd	r9, Y+11	; 0x0b
 fb4:	aa 84       	ldd	r10, Y+10	; 0x0a
 fb6:	b9 84       	ldd	r11, Y+9	; 0x09
 fb8:	c8 84       	ldd	r12, Y+8	; 0x08
 fba:	df 80       	ldd	r13, Y+7	; 0x07
 fbc:	ee 80       	ldd	r14, Y+6	; 0x06
 fbe:	fd 80       	ldd	r15, Y+5	; 0x05
 fc0:	0c 81       	ldd	r16, Y+4	; 0x04
 fc2:	1b 81       	ldd	r17, Y+3	; 0x03
 fc4:	aa 81       	ldd	r26, Y+2	; 0x02
 fc6:	b9 81       	ldd	r27, Y+1	; 0x01
 fc8:	ce 0f       	add	r28, r30
 fca:	d1 1d       	adc	r29, r1
 fcc:	0f b6       	in	r0, 0x3f	; 63
 fce:	f8 94       	cli
 fd0:	de bf       	out	0x3e, r29	; 62
 fd2:	0f be       	out	0x3f, r0	; 63
 fd4:	cd bf       	out	0x3d, r28	; 61
 fd6:	ed 01       	movw	r28, r26
 fd8:	08 95       	ret

00000fda <_exit>:
 fda:	f8 94       	cli

00000fdc <__stop_program>:
 fdc:	ff cf       	rjmp	.-2      	; 0xfdc <__stop_program>
